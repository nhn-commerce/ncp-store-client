swagger: '2.0'
info:
  description: NCP-Front Restful API Documentation
  version: '1.0'
  title: NHN Commerce Platform
  termsOfService: Terms of service
  contact:
    name: nhnent
    url: www.nhnent.com
    email: youngjin.kim@nhnent.com
  license:
    name: Copyright 2017 NHN Entertainment. All rights Reserved.
    url: 'http://www.nhnent.com'
host: alpha-api.e-ncp.com
basePath: /
tags:
  - name: '[Common] > Addresses'
    description: 주소
  - name: '[Common] > FileUpload'
    description: 파일업로드
  - name: '[Coupon]'
    description: 쿠폰
  - name: '[Display]'
    description: 전시
  - name: '[Guest] > Order'
    description: 비회원 주문
  - name: '[Order] > Cart'
    description: 장바구니
  - name: '[Order] > OrderSheet'
    description: 주문서
  - name: '[Order] > payments'
    description: 결제
  - name: '[Product]'
    description: 상품
  - name: '[Product] > Inquiry'
    description: 상품 문의
  - name: '[Product] > Review'
    description: 상품평
  - name: '[Profile]'
    description: 회원
  - name: '[Profile] > Accumulation'
    description: 적립금
  - name: '[Profile] > Authentication'
    description: 인증
  - name: '[Profile] > Inquiry'
    description: '1:1문의'
  - name: '[Profile] > KCPCertification'
    description: KCP 본인인증
  - name: '[Profile] > Like-products'
    description: 좋아요
  - name: '[Profile] > MyOrder'
    description: 마이페이지 - 주문
  - name: '[Profile] > Recent-products'
    description: 최근 상품
  - name: '[Profile] > Shipping Addresses'
    description: 회원 배송지
  - name: haekhyu.cho service
    description: NCP Front Apis
schemes:
  - http
  - https
paths:
  /addresses/search:
    get:
      tags:
        - '[Common] > Addresses'
      summary: 주소 검색
      description: 주소를 검색한다.
      operationId: getAddressesUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: keyword
          in: query
          description: keyword
          required: true
          type: string
          default: 삼평동
        - name: pageNumber
          in: query
          description: 페이지 번호
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          description: 한 페이지당 노출 수
          required: false
          type: integer
          format: int32
        - name: hasTotalCount
          in: query
          description: '목록 카운트 포함 여부(default: false)'
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AddressesResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /authentications/email:
    get:
      tags:
        - '[Profile] > Authentication'
      summary: e메일로 전달받은 인증코드 확인
      description: e메일로 전달받은 인증코드 확인
      operationId: isEmailAuthenticationCodeTrustedUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: memberId
          in: query
          description: 확인하려는 회원 아이디
          required: false
          type: string
        - name: certificatedNumber
          in: query
          description: 인증번호
          required: false
          type: string
        - name: usage
          in: query
          description: usage
          required: true
          type: string
          enum:
            - FIND_ID
            - FIND_PASSWORD
            - RELEASE_DORMANT
            - ADMIN
            - JOIN
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BooleanResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    post:
      tags:
        - '[Profile] > Authentication'
      summary: e메일로 인증번호 발송
      description: e메일로 인증번호 발송
      operationId: sendAuthenticationCodeToEmailUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/EmailCertificationPostRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RemainTimeResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /authentications/sms:
    get:
      tags:
        - '[Profile] > Authentication'
      summary: SMS 인증번호 확인
      description: SMS 인증번호 확인
      operationId: checkSmsAuthAdminUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: mobileNo
          in: query
          description: mobileNo
          required: true
          type: string
        - name: key
          in: query
          description: key
          required: true
          type: string
        - name: usage
          in: query
          description: usage
          required: true
          type: string
          enum:
            - FIND_ID
            - FIND_PASSWORD
            - CHANGE_MOBILE_NO
            - RELEASE_DORMANT
            - ADMIN
            - JOIN
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResultResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    post:
      tags:
        - '[Profile] > Authentication'
      summary: 점유인증 코드 SMS 발송
      description: 휴대폰 점유 인증을 위해 인증코드(6자리) SMS 발송
      operationId: sendSmsAuthUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/SmsCertificationPostRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RemainTimeResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    put:
      tags:
        - '[Profile] > Authentication'
      summary: SMS 인증 시간 재설정
      description: SMS 인증 시간 재설정 - 재 발송으로 가이드
      operationId: extendSmsAuthAdminUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/SmsCertificationExtendRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
      deprecated: true
  /captcha:
    get:
      tags:
        - '[Profile] > Authentication'
      summary: 자동입력 방지 문자 조회
      description: 자동입력 방지 문자 를 조회합니다 조회시마다 리셋됩니다.
      operationId: getCaptchaUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CaptchaResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /cart:
    get:
      tags:
        - '[Order] > Cart'
      summary: 장바구니 목록 가져오기
      description: 로그인된 유저의 장바구니 목록을목록을 가져옵니다.
      operationId: getCartsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CartResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    post:
      tags:
        - '[Order] > Cart'
      summary: 장바구니 등록
      description: 장바구니에 새로운 상품을 등록합니다.
      operationId: addCartUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - in: body
          name: carts
          description: carts
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CartItemRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CountResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    put:
      tags:
        - '[Order] > Cart'
      summary: '장바구니 수량, 사용자입력형 옵션 수정'
      description: |-
        로그인된 유저의 장바구니의 상품 중 상품 구매 수량과 사용자 입력형 옵션을 수정합니다.
        옵션 종류는 변경할 수 없습니다.
        옵션변경은 변경할 옵션을 삭제한 후 신규등록하는 방법으로 수정합니다
      operationId: modifyCartUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - in: body
          name: carts
          description: carts
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CartItemRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    delete:
      tags:
        - '[Order] > Cart'
      summary: 장바구니 삭제
      description: 장바구니 목록으로 확인할 수 있는 장바구니에서 삭제할 장바구니의 cartNo를 List형으로 전달해 주세요.
      operationId: deleteCartUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: cartNo
          in: query
          description: 삭제할 장바구니 번호
          required: true
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CountResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /cart/count:
    get:
      tags:
        - '[Order] > Cart'
      summary: 등록된 장바구니 갯수 가져오기
      description: 로그인된 유저의 장바구니 갯수를 가져옵니다.
      operationId: getCartCountUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CountResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /cart/validate:
    get:
      tags:
        - '[Order] > Cart'
      summary: 장바구니 저장 상품 유효성 체크
      description: 장바구니에 저장된 상품이 모두 유효한지 확인합니다.
      operationId: validateUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BooleanResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /categories:
    get:
      tags:
        - '[Product]'
      summary: 전체 카테고리 조회
      description: '2가지 카테고리를 제공(계층, 원본) 합니다.<br/>'
      operationId: getProductUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CategoryResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/categories/{categoryNo}':
    get:
      tags:
        - '[Product]'
      summary: 카테고리 조회
      description: '카테고리 번호로 카테고리를 조회<br/> 2가지형태의 카테고리를 제공(계층, 원본) 합니다.'
      operationId: getCategoriesByCategoryNoUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: categoryNo
          in: path
          description: 카테고리 번호
          required: false
          type: integer
          default: 14414
          format: int32
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CategoryResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /coupons:
    get:
      tags:
        - '[Coupon]'
      summary: 내 쿠폰 가져오기(마이페이지)
      operationId: getMyCouponsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: pageNumber
          in: query
          description: 페이지 번호
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          description: 한 페이지당 노출 수
          required: false
          type: integer
          format: int32
        - name: hasTotalCount
          in: query
          description: '목록 카운트 포함 여부(default: false)'
          required: false
          type: boolean
        - name: usable
          in: query
          description: 사용가능여부
          required: true
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MyCouponsApiResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/coupons/products/{productNo}/issuable/coupons':
    get:
      tags:
        - '[Coupon]'
      summary: 다운로드 가능한 쿠폰 가져오기(상품페이지)
      operationId: getIssuableCouponsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: false
          type: string
        - name: productNo
          in: path
          description: 몰 상품 번호
          required: true
          type: integer
          default: 100398947
          format: int32
        - name: couponTargetTypes
          in: query
          description: 상품쿠폰의 쿠폰대상 타입(특정상품 - PRODUCT/브랜드 - BRAND/카테고리-CATEGORY/파트너사-PARTNER
          required: false
          type: array
          items:
            type: string
            enum:
              - ALL_PRODUCT
              - PRODUCT
              - BRAND
              - CATEGORY
              - PARTNER
              - EVENT
          collectionFormat: multi
          enum:
            - ALL_PRODUCT
            - PRODUCT
            - BRAND
            - CATEGORY
            - PARTNER
            - EVENT
        - name: clientId
          in: header
          description: clientId
          required: false
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/IssuableCouponResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/coupons/register-code/{promotionCode}':
    post:
      tags:
        - '[Coupon]'
      summary: 쿠폰코드로 쿠폰 발급
      operationId: registerCouponCodeUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: promotionCode
          in: path
          description: promotionCode
          required: true
          type: string
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 실패
          schema:
            type: string
            enum:
              - MEMBER_DUPLICATED
              - MEMBER_ID_DUPLICATED
              - MEMBER_MOBILE_DUPLICATED
              - MEMBER_EMAIL_DUPLICATED
              - NEED_CERT_BEFORE_JOIN
              - ALREADY_CERTIFIED_MEMBER
              - CI_IS_NOT_VALUED
              - THE_MEMBER_IS_NOT_UNIQUE
              - CLIENT_ID_IS_EMPTY
              - ACCESS_TOKEN_IS_EMPTY
              - REQUEST_NEED_AUTHENTICATED
              - ACCESS_TOKEN_AUTHENTICATED_FAIL
              - MEMBER_AUTHENTICATED_FAIL
              - CLIENT_ID_IS_NOT_VALUED
              - MEMBER_IS_EMPTY
              - USERNAME_PASSWORD_IS_REQUIRED
              - PASSWORD_IS_NOT_VALID
              - DORMANT_MEMBER
              - ISSUE_ACCESS_TOKEN_FAIL
              - MEMBER_STATUS_IS_WATING
              - MEMBER_STATUS_IS_LOCKED
              - MEMBER_STATUS_IS_PAUSED
              - MEMBER_STATUS_IS_BLOCKED
              - MEMBER_IS_NOT_MALL_MEMBER
              - MEMBER_HAS_NOT_MOBILE_NO
              - MEMBER_HAS_NOT_EMAIL
              - PROVIDER_IS_NOT_VALUED
              - MEMBER_STATUS_IS_NOT_VALUED
              - CODE_OR_ACCES_TOKEN_REQUIRED
              - MEMBERNAME_IS_EMPTY
              - NICKNAME_IS_EMPTY
              - EMAIL_IS_EMPTY
              - BIRTHDAY_IS_EMPTY
              - SEX_IS_EMPTY
              - ADDRESS_IS_EMPTY
              - CI_IS_EMPTY
              - CERTIFICATED_NUMBER_IS_EMPTY
              - MOBILE_NO_IS_EMPTY
              - MEMBER_STATUS_NOT_EXPELLED
              - MEMBER_STATUS_NOT_FREEZE
              - PAYCO_MEMBER_REMOVE_PROVISION_FAIL
              - PAYCO_MEMBER_SET_PROVISION_FAIL
              - PAYCO_MEMBER_REMOVE_SERVICE_OFFER_FAIL
              - PAYCO_MEMBER_SET_SERVICE_OFFER_FAIL
              - REQUEST_ERROR
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/coupons/{couponNo}/download':
    post:
      tags:
        - '[Coupon]'
      summary: downloadCoupon
      operationId: downloadCouponUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: couponNo
          in: path
          description: 쿠폰 번호
          required: true
          type: integer
          format: int32
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CouponIssueResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/display/banners/{bannerSectionCodes}':
    get:
      tags:
        - '[Display]'
      summary: 배너목록 조회
      description: '{bannerSectionCodes}는 NCP 어드민에서 입력한 섹션 코드 번호'
      operationId: getBannerSectionsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: bannerSectionCodes
          in: path
          description: '조회할 배너 섹션 번호(,로 구분한 배열)'
          required: false
          type: string
          default: '000,001'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BannerSectionResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /display/brands:
    get:
      tags:
        - '[Display]'
      summary: 브랜드 목록 조회
      description: 브랜드 목록 조회 with paging
      operationId: getBrandsUsingGET_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: filter.name
          in: query
          description: 검색할 브랜드명
          required: false
          type: string
        - name: filter.categoryNo
          in: query
          description: 검색할 카테고리 번호
          required: false
          type: integer
          format: int32
        - name: pageNumber
          in: query
          description: 페이지 번호
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          description: 한 페이지당 노출 수
          required: false
          type: integer
          format: int32
        - name: hasTotalCount
          in: query
          description: '목록 카운트 포함 여부(default: false)'
          required: false
          type: boolean
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BrandsResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/display/brands/{brandNo}':
    get:
      tags:
        - '[Display]'
      summary: 브랜드 상세
      description: 브랜드 상세 조회<br/>브랜드에 속한 카테고리 번호 포함
      operationId: getBrandsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: brandNo
          in: path
          description: 브랜드 번호
          required: false
          type: integer
          default: 497
          format: int32
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BrandDetailResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/display/events/{eventNo}':
    get:
      tags:
        - '[Display]'
      summary: 기획전 조회
      description: '{eventNo}는 NCP 어드민에서 등록된 x 사용'
      operationId: getEventUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: eventNo
          in: path
          description: 이벤트 번호
          required: false
          type: integer
          default: 73
          format: int32
        - name: accessToken
          in: header
          description: accessToken
          required: false
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EventResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /display/popups:
    get:
      tags:
        - '[Display]'
      summary: 전체 팝업 목록 조회
      operationId: getPopupsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PopupResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/display/popups/{popupNos}':
    get:
      tags:
        - '[Display]'
      summary: 팝업 목록 조회
      description: '{popupNos}는 NCP 어드민에서 등록된 팝업 번호입니다.'
      operationId: getPopupsByPopupNosUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: popupNos
          in: path
          description: '조회할 팝업 번호(,로 구분한 배열)'
          required: false
          type: string
          default: '23'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PopupResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/display/sections/{sectionNos}':
    get:
      tags:
        - '[Display]'
      summary: 상품 섹션 조회
      description: '{sectionNos}는 NCP 어드민에서 입력한 상품 섹션 번호'
      operationId: getBannerSectionsUsingGET_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: sectionNos
          in: path
          description: '조회할 상품 섹션 번호(,로 구분한 배열)'
          required: false
          type: string
          default: '1,2'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SectionResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /files:
    get:
      tags:
        - '[Common] > FileUpload'
      summary: download
      operationId: downloadUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: fileName
          in: query
          description: fileName
          required: true
          type: string
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
      deprecated: true
    post:
      tags:
        - '[Common] > FileUpload'
      summary: 파일업로드
      description: ObjectStorage에 파일을 업로드함
      operationId: uploadUsingPOST
      consumes:
        - multipart/form-data
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
        - name: file
          in: formData
          required: true
          type: ref
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FileUploadResult'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    delete:
      tags:
        - '[Common] > FileUpload'
      summary: 파일삭제
      description: ObjectStorage의 파일을 삭제함
      operationId: deleteUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: fileName
          in: query
          description: fileName
          required: true
          type: string
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: boolean
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /guest/cart:
    post:
      tags:
        - '[Guest] > Order'
      summary: 게스트 장바구니 생성 및 조회
      description: 게스트의 장바구니 목록을 가져옵니다.
      operationId: getCartsForGuestUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: cartItemRequests
          description: cartItemRequests
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CartItemRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CartResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/guest/orders/{orderNo}':
    post:
      tags:
        - '[Guest] > Order'
      summary: 비회원 주문 상세조회(패스워드로)
      description: '주문번호, 패스워드로 상세 데이터 조회합니다.'
      operationId: guestDetailUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: orderNo
          in: path
          description: 주문번호
          required: true
          type: string
        - in: body
          name: guestOrderRequest
          description: guestOrderRequest
          required: true
          schema:
            $ref: '#/definitions/GuestOrderRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserOrderDetail'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/guest/orders/{orderNo}/forgot-password':
    get:
      tags:
        - '[Guest] > Order'
      summary: 비회원 주문 패스워드 재전송
      description: >-
        패스워드를 분실한 사용자가 주문번호를 이용해 패스워드를 초기화하여 주문시 입력한 e-mail로 초기화된 패스워드를
        전달받습니다(for US)
      operationId: guestForgotPasswordUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: orderNo
          in: path
          description: 주문번호
          required: true
          type: string
        - name: replyType
          in: query
          description: 비밀번호 받을 방식
          required: true
          type: string
          enum:
            - EMAIL
            - SMS
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserOrderDetail'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /inquiries:
    get:
      tags:
        - '[Profile] > Inquiry'
      summary: '1:1 문의내역 조회'
      description: '회원의 1:1 문의내역 조회'
      operationId: getInquiriesUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: pageNumber
          in: query
          description: 페이지 번호
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          description: 한 페이지당 노출 수
          required: false
          type: integer
          format: int32
        - name: hasTotalCount
          in: query
          description: '목록 카운트 포함 여부(default: false)'
          required: false
          type: boolean
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InquiriesResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    post:
      tags:
        - '[Profile] > Inquiry'
      summary: '1:1 문의 등록'
      description: '1:1 문의 등록 (비회원 등록 시에는 email 입력 필요)'
      operationId: addInquiryUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: accessToken
          in: header
          description: accessToken
          required: false
          type: string
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/InquiryAddRequest'
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InquiryKeyResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /kcp-certification/member:
    post:
      tags:
        - '[Profile] > KCPCertification'
      summary: KCP 본인인증 요청
      description: KCP 본인인증 요청
      operationId: requestKcpMallCertificationUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/KcpMemberCertificationApiRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/KcpMemberCertificationTransferForm'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /kcp-certification/member/result-decrypt:
    get:
      tags:
        - '[Profile] > KCPCertification'
      summary: KCP 본인인증 결과 복호화 요청
      description: KCP 본인인증 결과 복호화 요청
      operationId: requestKcpMallCertificationResultDecryptionUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: key
          in: query
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/KcpCertificationResult'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /oauth/login-url:
    get:
      tags:
        - '[Profile] > Authentication'
      summary: OpenId 로그인 url 조회
      description: OpenId 로그인 url 조회 (개발중입니다 사용하지 마세요)
      operationId: getLoginUrlUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: provider
          in: query
          description: provider
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LoginUrlResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /oauth/openid:
    get:
      tags:
        - '[Profile] > Authentication'
      summary: OpenId AccessToken 발급
      description: OpenId 회원의 AccessToken 발급
      operationId: openIdLoginUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: code
          in: query
          description: OpenId 인증 후 발급받은 code
          required: false
          type: string
        - name: openAccessToken
          in: query
          description: 외부 Open Id 서비스의 AccessToken
          required: false
          type: string
        - name: sessionKey
          in: query
          description: Url 조회 시 발급된 SessionKey (Payco 미사용)
          required: false
          type: string
        - name: provider
          in: query
          description: provider
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccessTokenResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /oauth/token:
    post:
      tags:
        - '[Profile] > Authentication'
      summary: AccessToken 발급
      description: NCP 회원의 AccessToken 발급
      operationId: postAccessTokenUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/UsernamePasswordRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccessTokenResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    delete:
      tags:
        - '[Profile] > Authentication'
      summary: AccessToken 반환
      description: 'AccessToken 만료 처리 (ncp, payco 회원 동일)'
      operationId: revokeTokenUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /openid/token:
    get:
      tags:
        - '[Profile] > Authentication'
      summary: OpenId 서비스 제공자의 AccessToken 조회
      description: OpenId 서비스 제공자의 AccessToken 조회
      operationId: getOpenIdTokenUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OpenAccessTokenResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /order-sheets:
    post:
      tags:
        - '[Order] > OrderSheet'
      summary: 주문서 생성
      description: >-
        주문를 진행할 상품정보를 전달합니다. 주문서 페이지 진입전에 실행합니다. 비회원 주문인 경우 accessToken을 null로
        보냅니다.
      operationId: issueUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: false
          type: string
        - in: body
          name: orderSheetRequest
          description: orderSheetRequest
          required: true
          schema:
            $ref: '#/definitions/OrderSheetRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderSheetKeyResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/order-sheets/{orderSheetNo}':
    get:
      tags:
        - '[Order] > OrderSheet'
      summary: 주문서 가져오기
      description: 주문서 번호를 이용하여 주문상품정보를 가져옵니다. 비회원 주문인 경우 accessToken을 null로 보냅니다.
      operationId: getOrderSheetUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: false
          type: string
        - name: orderSheetNo
          in: path
          description: 주문서 번호
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderSheetResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/order-sheets/{orderSheetNo}/calculate':
    post:
      tags:
        - '[Order] > OrderSheet'
      summary: 쿠폰 및 배송지 정보가 적용된 금액을 노출
      description: '쿠폰 및 배송비 계산이 적용된 주문서 금액을 계산합니다. 비회원 주문인 경우 accessToken을 null로 보냅니다. '
      operationId: applyCouponUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: false
          type: string
        - in: body
          name: calculationRequest
          description: calculationRequest
          required: true
          schema:
            $ref: '#/definitions/OrderSheetCalculationRequest'
        - name: orderSheetNo
          in: path
          description: orderSheetNo
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderSheetCouponApplyResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/order-sheets/{orderSheetNo}/coupons':
    get:
      tags:
        - '[Order] > OrderSheet'
      summary: 적용할 수 있는 쿠폰 정보 조회
      description: 해당 주문에 적용할 수 있는 쿠폰을 조회합니다.
      operationId: availableCouponsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: orderSheetNo
          in: path
          description: orderSheetNo
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderSheetCouponResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/order-sheets/{orderSheetNo}/coupons/apply':
    post:
      tags:
        - '[Order] > OrderSheet'
      summary: 쿠폰적용금액 계산
      description: '쿠폰을 적용한 금액을 미리 계산하여 보여줍니다. '
      operationId: applyCouponUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: orderSheetNo
          in: path
          description: orderSheetNo
          required: true
          type: string
        - name: 'productCoupons[0].productNo'
          in: query
          required: false
          type: integer
          format: int32
        - name: 'productCoupons[0].couponIssueNo'
          in: query
          required: false
          type: integer
          format: int64
        - name: 'productCoupons[0].plusCouponIssueNo'
          in: query
          required: false
          type: integer
          format: int64
        - name: 'productCoupons[0].promotionCode'
          in: query
          required: false
          type: string
        - name: 'productCoupons[0].plusPromotionCode'
          in: query
          required: false
          type: string
        - name: cartCouponIssueNo
          in: query
          required: false
          type: integer
          format: int64
        - name: deliveryCouponIssueNo
          in: query
          required: false
          type: integer
          format: int64
        - name: promotionCode
          in: query
          required: false
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderSheetCouponApplyResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/order-sheets/{orderSheetNo}/coupons/calculate':
    post:
      tags:
        - '[Order] > OrderSheet'
      summary: 쿠폰적용금액 계산
      description: '쿠폰을 적용한 금액을 미리 계산하여 보여줍니다. '
      operationId: calculateCouponUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: orderSheetNo
          in: path
          description: orderSheetNo
          required: true
          type: string
        - name: 'productCoupons[0].productNo'
          in: query
          required: false
          type: integer
          format: int32
        - name: 'productCoupons[0].couponIssueNo'
          in: query
          required: false
          type: integer
          format: int64
        - name: 'productCoupons[0].plusCouponIssueNo'
          in: query
          required: false
          type: integer
          format: int64
        - name: 'productCoupons[0].promotionCode'
          in: query
          required: false
          type: string
        - name: 'productCoupons[0].plusPromotionCode'
          in: query
          required: false
          type: string
        - name: cartCouponIssueNo
          in: query
          required: false
          type: integer
          format: int64
        - name: deliveryCouponIssueNo
          in: query
          required: false
          type: integer
          format: int64
        - name: promotionCode
          in: query
          required: false
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderSheetCouponResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /payments/confirm:
    post:
      tags:
        - '[Order] > payments'
      summary: 주문 확정 하기
      description: |-
        orderSheetNo는 주문서 번호 발급 API를 통해 전달 받은 값을 주셔야 합니다. 아래와 같이 실행해주세요.
        1. 주문예약 API 실행.
        2. 주문예약 api를 통해 전달받은 returnUrl로 이동
        3. PAYCO결제 창에 결제 정보 입력
        4. PAYCO결제창에서 결제 정보를 모두 입력하면 주문 예약 API에서 clientReturnUrl로 페이지가 자동으로 이동됨.
        5. clientReturnUrl에서 파라미터로 전달 받은 값을 확인하여 api값으로 입력.
      operationId: confirmUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - in: body
          name: confirmRequest
          description: confirmRequest
          required: true
          schema:
            $ref: '#/definitions/PaymentConfirmRequest'
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PayConfirmResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /payments/extra-datas:
    get:
      tags:
        - '[Order] > payments'
      summary: 주문 추가 정보 조회
      description: 주문 추가 정보를 조회한다
      operationId: getOrderTempUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: orderSheetNo
          in: query
          description: orderSheetNo
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /payments/inicis/redirect:
    post:
      tags:
        - '[Order] > payments'
      summary: 이니시스 리다이렉트 url
      description: 이니시스를 사용하는 경우 이니시스 결제 완료 후 리다이렉트를 위한 url
      operationId: inicisRedirectUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: orderSheetNo
          in: query
          description: orderSheetNo
          required: true
          type: string
        - name: resultCode
          in: query
          required: false
          type: string
        - name: resultMsg
          in: query
          required: false
          type: string
        - name: mid
          in: query
          required: false
          type: string
        - name: authToken
          in: query
          required: false
          type: string
        - name: authUrl
          in: query
          required: false
          type: string
        - name: netCancelUrl
          in: query
          required: false
          type: string
        - name: merchantData
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /payments/kcp/confirm:
    post:
      tags:
        - '[Order] > payments'
      summary: KCP 주문 확정 하기
      description: |-
        orderSheetNo는 주문서 번호 발급 API를 통해 전달 받은 값을 주셔야 합니다. 아래와 같이 실행해주세요.
        1. 주문예약 API 실행.
        2. 주문예약 api를 통해 전달받은 returnUrl로 이동
        3. PAYCO결제 창에 결제 정보 입력
        4. PAYCO결제창에서 결제 정보를 모두 입력하면 주문 예약 API에서 clientReturnUrl로 페이지가 자동으로 이동됨.
        5. clientReturnUrl에서 파라미터로 전달 받은 값을 확인하여 api값으로 입력.
      operationId: kcpConfirmUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - in: body
          name: confirmRequest
          description: confirmRequest
          required: true
          schema:
            $ref: '#/definitions/KcpConfirmRequest'
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/KcpConfirmResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /payments/kcp/mobile-confirm:
    get:
      tags:
        - '[Order] > payments'
      summary: KCP 모바일 주문 확정 조회
      description: >-
        주문 확정건에 대한 정보를 결제금액과 같은 정보를 조회합니다. 계좌이체, 가상계좌의 경우 발급된 계좌에 대한 정보도 얻을 수
        있습니다.
      operationId: kcpMobileConfirmUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: orderSheetNo
          in: query
          description: orderSheetNo
          required: true
          type: string
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/KcpConfirmResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /payments/kcp/mobile-reserve:
    post:
      tags:
        - '[Order] > payments'
      summary: 모바일웹용 KCP 주문 예약 하기
      description: >-
        orderSheetNo는 주문서 번호 발급 API를 통해 전달 받은 값을 주셔야 합니다. 기본값으로 테스트 하실때는
        String으로 되어 있는 값들은 null로 변경해 주시고 clientParmas값은 앞뒤에 "을 삭제하시고 \기호를
        삭제해주세요.
      operationId: mobileReservationUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: false
          type: string
        - name: provider
          in: header
          description: provider
          required: false
          type: string
        - in: body
          name: paymentRequest
          description: paymentRequest
          required: true
          schema:
            $ref: '#/definitions/OrderPaymentRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/KcpMobileReserveResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /payments/kcp/reserve:
    post:
      tags:
        - '[Order] > payments'
      summary: KCP 주문 예약 하기
      description: >-
        orderSheetNo는 주문서 번호 발급 API를 통해 전달 받은 값을 주셔야 합니다. 기본값으로 테스트 하실때는
        String으로 되어 있는 값들은 null로 변경해 주시고 clientParmas값은 앞뒤에 "을 삭제하시고 \기호를
        삭제해주세요.
      operationId: reservationUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: false
          type: string
        - name: provider
          in: header
          description: provider
          required: false
          type: string
        - in: body
          name: paymentRequest
          description: paymentRequest
          required: true
          schema:
            $ref: '#/definitions/OrderPaymentRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PayReservationResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /payments/payments/kcp/confirm-deposit:
    post:
      tags:
        - '[Order] > payments'
      summary: KCP 가상계좌 입금 처리
      description: 가상계좌 입금 완료되면 KCP 서버가 우리측으로 결제완료 알림을 보내준다
      operationId: confirmKcpNoAccountUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: kcpVirtualAccountNotification
          description: kcpVirtualAccountNotification
          required: true
          schema:
            $ref: '#/definitions/KcpVirtualAccountNotification'
        - name: clientId
          in: header
          description: clientId
          required: false
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /payments/reserve:
    post:
      tags:
        - '[Order] > payments'
      summary: 주문 예약 하기
      description: >-
        orderSheetNo는 주문서 번호 발급 API를 통해 전달 받은 값을 주셔야 합니다. 기본값으로 테스트 하실때는
        String으로 되어 있는 값들은 null로 변경해 주시고 clientParmas값은 앞뒤에 "을 삭제하시고 \기호를
        삭제해주세요.
      operationId: paymentUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: false
          type: string
        - in: body
          name: paymentRequest
          description: paymentRequest
          required: true
          schema:
            $ref: '#/definitions/OrderPaymentRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PayReservationResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /payments/stripe/cards:
    get:
      tags:
        - '[Order] > payments'
      summary: get card list
      description: get card list(미국몰 전용)
      operationId: cardsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: false
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/StripeCard'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/payments/stripe/cards/{cardId}':
    delete:
      tags:
        - '[Order] > payments'
      summary: delete card
      description: delete card(미국몰 전용)
      operationId: deleteCardUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: false
          type: string
        - name: cardId
          in: path
          description: cardId
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/payments/{pgType}/confirm-deposit/orders/{orderNo}':
    post:
      tags:
        - '[Order] > payments'
      summary: 무통장 입금 처리
      description: 외부 PG사에서 무통장입금이 완료되면 우리측으로 결제완료를 알려주는 api
      operationId: confirmNoAccountUsingPOST
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - '*/*'
      parameters:
        - name: pgType
          in: path
          description: pgType
          required: true
          type: string
        - name: orderNo
          in: path
          description: orderNo
          required: true
          type: string
        - name: response
          in: formData
          description: response
          required: false
          type: string
        - name: message
          in: formData
          description: message
          required: false
          type: string
        - name: code
          in: formData
          description: code
          required: false
          type: string
        - name: entity
          in: formData
          description: entity
          required: false
          type: string
        - name: clientId
          in: header
          description: clientId
          required: false
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /products:
    get:
      tags:
        - '[Product]'
      summary: 상품 목록
      description: 상품 목록 조회 with paging
      operationId: 상품 목록 조회
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: filter.discountedPrices
          in: query
          description: '판매가 - 즉시할인 - 추가상품할인이 적용된 "최종 할인가격", between검색일 경우 입력값 2개 필요'
          required: false
          type: array
          items:
            type: number
          collectionFormat: multi
        - name: filter.discountedComparison
          in: query
          description: 최종 할인가격 검색 조건
          required: false
          type: string
          enum:
            - LT
            - LTE
            - GT
            - GTE
            - EQ
            - BT
        - name: order.by
          in: query
          description: >-
            POPULAR:판매인기순(검색엔진 도입), SALE_YMD:판매일자, DISCOUNTED_PRICE:가격순,
            REVIEW:상품평
          required: false
          type: string
          enum:
            - POPULAR
            - SALE_YMD
            - DISCOUNTED_PRICE
            - REVIEW
        - name: order.direction
          in: query
          description: '정렬기준(default : DESC)'
          required: false
          type: string
          enum:
            - ASC
            - DESC
        - name: pageNumber
          in: query
          description: 페이지 번호
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          description: 한 페이지당 노출 수
          required: false
          type: integer
          format: int32
        - name: hasTotalCount
          in: query
          description: '목록 카운트 포함 여부(default: false)'
          required: false
          type: boolean
        - name: categoryNo
          in: query
          description: 카테고리 번호
          required: false
          type: integer
          format: int32
        - name: brandNo
          in: query
          description: 브랜드 번호
          required: false
          type: integer
          format: int32
        - name: accessToken
          in: header
          description: accessToken(로그인 상태일 경우만)
          required: false
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProductsResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/products/inquiries/{inquiryNo}':
    put:
      tags:
        - '[Product] > Inquiry'
      summary: 상품문의 수정
      description: '상품문의 수정하기<br/>- 작성자 본인만 가능<br/>- 제목,내용,문의유형만 수정 가능'
      operationId: modifyProductInquiryUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: inquiryRequest
          description: 상품문의 입력 객체
          required: false
          schema:
            $ref: '#/definitions/ProductInquiryEditRequest'
        - name: inquiryNo
          in: path
          description: 상품문의 번호
          required: true
          type: integer
          format: int32
        - name: accessToken
          in: header
          description: accessToken(필수)
          required: false
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InquiryKeyResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    delete:
      tags:
        - '[Product] > Inquiry'
      summary: 상품문의 삭제
      description: 상품품문의 삭제<br/>- 작성자 본인만 가능
      operationId: removeProductInquiryUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: inquiryNo
          in: path
          description: 상품문의 번호
          required: true
          type: integer
          format: int32
        - name: accessToken
          in: header
          description: accessToken(필수)
          required: false
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InquiryKeyResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/products/{productNo}':
    get:
      tags:
        - '[Product]'
      summary: 상품 상세
      description: '해당 상품 번호에 대한 상세, 이미지, 옵션 정보를 조회'
      operationId: 상품 상세 조회
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: productNo
          in: path
          description: 상품번호
          required: true
          type: integer
          default: 100398947
          format: int32
        - name: accessToken
          in: header
          description: accessToken(로그인 상태일 경우만)
          required: false
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProductDetailResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/products/{productNo}/inquiries':
    get:
      tags:
        - '[Product] > Inquiry'
      summary: 상품문의 목록
      description: 상품번호(로그인 했을 경우 맴버번호 추가)로 상품문의 목록을 조회 한다 with paging
      operationId: getProductInquiriesByProductNoUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: productNo
          in: path
          description: 상품번호
          required: true
          type: integer
          default: 100398947
          format: int32
        - name: pageNumber
          in: query
          description: 페이지 번호
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          description: 한 페이지당 노출 수
          required: false
          type: integer
          format: int32
        - name: hasTotalCount
          in: query
          description: '목록 카운트 포함 여부(default: false)'
          required: false
          type: boolean
        - name: accessToken
          in: header
          description: accessToken(로그인 상태일 경우만)
          required: false
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProductInquiriesResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    post:
      tags:
        - '[Product] > Inquiry'
      summary: 상품문의 등록
      description: 상품문의 등록<br/>(재문의인 경우에만 parentNo를 전송할 것)
      operationId: addProductInquiryUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: inquiryRequest
          description: 상품문의 입력 객체
          required: false
          schema:
            $ref: '#/definitions/ProductInquiryAddRequest'
        - name: productNo
          in: path
          description: 상품번호
          required: true
          type: integer
          default: 100398947
          format: int32
        - name: accessToken
          in: header
          description: accessToken(필수)
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InquiryKeyResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/products/{productNo}/options':
    get:
      tags:
        - '[Product]'
      summary: 옵션 조회
      description: '2가지 옵션목록을 제공(계층, 원본)'
      operationId: 상품번호로 옵션을 조회한다
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: productNo
          in: path
          description: 상품번호
          required: true
          type: integer
          default: 100398947
          format: int32
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OptionResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/products/{productNo}/product-reviews':
    get:
      tags:
        - '[Product] > Review'
      summary: 상품평 목록
      description: |-
        몰 상품 별 상품평 목록 가져오기 (페이징)
         * 파일 첨부 유무
        (Y = 파일 첨부 / N = 파일 미첨부 / 빈값 = ALL)
      operationId: 상품평 목록
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: productNo
          in: path
          description: 상품 번호
          required: true
          type: integer
          format: int32
        - name: pageNumber
          in: query
          description: 페이지 번호
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          description: 한 페이지당 노출 수
          required: false
          type: integer
          format: int32
        - name: hasTotalCount
          in: query
          description: '목록 카운트 포함 여부(default: false)'
          required: false
          type: boolean
        - name: attachYn
          in: query
          description: 파일 첨부 유무
          required: false
          type: string
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ReviewsResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    post:
      tags:
        - '[Product] > Review'
      summary: 상품평 입력
      description: '상품평 입력 (response : 저장된 상품평 번호)'
      operationId: 상품평 입력
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: productNo
          in: path
          description: 상품 번호
          required: true
          type: integer
          format: int32
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - in: body
          name: reviewForm
          description: reviewForm
          required: true
          schema:
            $ref: '#/definitions/ReviewForm'
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ReviewKeyResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/products/{productNo}/product-reviews/rating':
    get:
      tags:
        - '[Product] > Review'
      summary: 상품평 평점 가져오기
      description: 몰 상품별 상품평 평점 조회
      operationId: 상품평 평점 가져오기
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: productNo
          in: path
          description: 상품 번호
          required: true
          type: integer
          format: int32
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ReviewRateResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/products/{productNo}/product-reviews/{reviewNo}':
    get:
      tags:
        - '[Product] > Review'
      summary: 상품평 상세 가져오기
      description: 상품평 상세 조회
      operationId: 상품평 상세 가져오기
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: reviewNo
          in: path
          description: 상품평 번호
          required: true
          type: integer
          format: int32
        - name: productNo
          in: path
          description: 상품 번호
          required: true
          type: integer
          format: int32
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ReviewResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    put:
      tags:
        - '[Product] > Review'
      summary: 상품평 수정
      description: |-
        상품평 수정
        - 작성자만 가능
        - 현재는 정책상 내용/평점만 수정 가능
      operationId: 상품평 수정
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: productNo
          in: path
          description: 상품 번호
          required: true
          type: integer
          format: int32
        - name: reviewNo
          in: path
          description: 상품평 번호
          required: true
          type: integer
          format: int32
        - in: body
          name: reviewForm
          description: reviewForm
          required: true
          schema:
            $ref: '#/definitions/ReviewForm'
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    delete:
      tags:
        - '[Product] > Review'
      summary: 상품평 삭제
      description: |-
        상품평 삭제
        - 작성자만 가능
      operationId: 상품평 삭제
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: productNo
          in: path
          description: 상품 번호
          required: true
          type: integer
          format: int32
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: reviewNo
          in: path
          description: 상품평 번호
          required: true
          type: integer
          format: int32
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/products/{productNo}/product-reviews/{reviewNo}/recommend':
    put:
      tags:
        - '[Product] > Review'
      summary: 상품평 추천하기
      description: 상품평 추천하기
      operationId: 상품평 추천하기
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: productNo
          in: path
          description: 상품 번호
          required: true
          type: integer
          format: int32
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: reviewNo
          in: path
          description: 상품평 번호
          required: true
          type: integer
          format: int32
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/products/{productNo}/product-reviews/{reviewNo}/report':
    put:
      tags:
        - '[Product] > Review'
      summary: 상품평 신고하기
      description: 상품평 신고하기
      operationId: 상품평 신고하기
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: productNo
          in: path
          description: 상품 번호
          required: true
          type: integer
          format: int32
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: reviewNo
          in: path
          description: 상품평 번호
          required: true
          type: integer
          format: int32
        - in: body
          name: reviewReportForm
          description: reviewReportForm
          required: true
          schema:
            $ref: '#/definitions/ReviewReportForm'
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile:
    get:
      tags:
        - '[Profile]'
      summary: 회원정보 조회
      description: 회원정보를 조회
      operationId: profilesUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProfileResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    post:
      tags:
        - '[Profile]'
      summary: 회원 가입
      description: 회원 가입
      operationId: registerNcpMemberUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: param
          description: param
          required: true
          schema:
            $ref: '#/definitions/MemberJoinRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProfileResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    put:
      tags:
        - '[Profile]'
      summary: 회원정보 수정
      description: 회원정보를 수정함
      operationId: updateProfilesUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - in: body
          name: param
          description: param
          required: true
          schema:
            $ref: '#/definitions/MemberUpdateRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProfileResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    delete:
      tags:
        - '[Profile]'
      summary: 회원 탈퇴
      description: 회원 탈퇴
      operationId: removeNcpMemberUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: reason
          in: query
          description: 탈퇴 사유
          required: false
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/accumulations:
    get:
      tags:
        - '[Profile] > Accumulation'
      summary: 적립금 이력 조회
      description: 해당회원의 적립금 이력 조회
      operationId: accumulationsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: pageNumber
          in: query
          description: 페이지 번호
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          description: 한 페이지당 노출 수
          required: false
          type: integer
          format: int32
        - name: hasTotalCount
          in: query
          description: '목록 카운트 포함 여부(default: false)'
          required: false
          type: boolean
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccumulationsResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/accumulations/summary:
    get:
      tags:
        - '[Profile] > Accumulation'
      summary: 적립금 요약 조회
      description: 해당회원의 적립금 요약 정보 조회
      operationId: accumulationsSummaryUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: expireStartYmdt
          in: query
          description: '만료 조회 시작일 (yy-mm-dd hh:mm:ss)'
          required: false
          type: string
        - name: expireEndYmdt
          in: query
          description: '만료 조회 종료일 (yy-mm-dd hh:mm:ss)'
          required: false
          type: string
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccumulationSummaryResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/cert:
    post:
      tags:
        - '[Profile]'
      summary: 본인인증 정보 저장
      description: 본인인증 진행 후 본인인증 관련 정보 저장 - <a href='/kcp-cert/index.html'>본인인증</a>
      operationId: certMemberUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: param
          description: param
          required: true
          schema:
            $ref: '#/definitions/MemberCertRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProfileResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/check-password:
    post:
      tags:
        - '[Profile]'
      summary: 비밀번호 확인
      description: 현재 로그인한 사용자가 맞는지 비밀번호를 한번 더 체크
      operationId: checkPasswordUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/PasswordRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/data:
    delete:
      tags:
        - '[Profile]'
      summary: 회원탈퇴(PAYCO+SHOP 전용)
      description: OpenId 연동하지 않는 회원탈퇴
      operationId: removeMemberDataOnlyUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: reason
          in: query
          description: 탈퇴 사유
          required: false
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/dormancy:
    put:
      tags:
        - '[Profile]'
      summary: 휴면 상태 해제 처리
      description: 휴면상태 해제 처리
      operationId: releaseDormancyUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: param
          description: param
          required: true
          schema:
            $ref: '#/definitions/ReleaseDormancyRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/email/exist:
    get:
      tags:
        - '[Profile]'
      summary: 해당 쇼핑몰에 이메일 중복여부 확인
      description: '해당 쇼핑몰에 입력한 이메일이 있는지 확인, true면 중복'
      operationId: doesEmailExistInMallUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: email
          in: query
          description: 이메일 주소
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberExistResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/id:
    get:
      tags:
        - '[Profile]'
      summary: 아이디 찾기
      description: 비인증상태에서 쇼핑몰 회원의 아이디 찾기
      operationId: findMemberIdInMallUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: name
          in: query
          description: 이름 (쇼핑몰 회원가입 정보 설정에서 `회원명`을 `사용함` 또는 `필수`로 지정한 경우 필수입력)
          required: false
          type: string
        - name: birthday
          in: query
          description: 생년월일 (쇼핑몰 회원가입 정보 설정에서 `생년월일`을 `사용함` 또는 `필수`로 지정한 경우 필수입력)
          required: false
          type: string
        - name: sex
          in: query
          description: 성별 (쇼핑몰 회원가입 정보 설정에서 `성별`을 `사용함` 또는 `필수`로 지정한 경우 필수입력)
          required: false
          type: string
        - name: ci
          in: query
          description: >-
            CI (쇼핑몰 회원가입 설정에서 인증종류를 `휴대폰 본인인증`으로 설정되어야합니다. 미입력 시 마스킹된 아이디를
            리턴합니다)
          required: false
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MemberIdResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/id/exist:
    get:
      tags:
        - '[Profile]'
      summary: 해당 쇼핑몰에 아이디 중복여부
      description: '해당 쇼핑몰에 아이디가 있는지 확인, true면 중복'
      operationId: doesIdExistInMallUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: memberId
          in: query
          description: 아이디
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberExistResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/like-products:
    get:
      tags:
        - '[Profile] > Like-products'
      summary: 나의 좋아요 상품목록
      description: 로그인 이후에만 호출 가능(accessToken)
      operationId: getMyLikeProductsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: pageNumber
          in: query
          description: 페이지 번호
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          description: 한 페이지당 노출 수
          required: false
          type: integer
          format: int32
        - name: hasTotalCount
          in: query
          description: '목록 카운트 포함 여부(default: false)'
          required: false
          type: boolean
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProductsResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    post:
      tags:
        - '[Profile] > Like-products'
      summary: 상품 좋아요 전송
      description: 로그인 이후에만 호출 가능(accessToken)
      operationId: addLikeProductUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: productNo
          description: 상품번호
          required: true
          schema:
            type: integer
            format: int32
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BooleanResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/member/equals/with-email:
    get:
      tags:
        - '[Profile]'
      summary: '해당 쇼핑몰 아이디, 이름, 이메일 검증'
      description: '해당 쇼핑몰에 입력한 아이디, 이름, 휴대폰번호와 동일한 사용자가 있는지 여부 확인, ture면 존재'
      operationId: doesMemberExistByIdAndNameAndEmailUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: memberId
          in: query
          description: 아이디
          required: true
          type: string
        - name: memberName
          in: query
          description: 이름
          required: true
          type: string
        - name: email
          in: query
          description: 이메일 주소
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberExistResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/member/equals/with-mobile:
    get:
      tags:
        - '[Profile]'
      summary: '해당 쇼핑몰 아이디, 이름, 휴대폰번호 검증'
      description: '해당 쇼핑몰에 입력한 아이디, 이름, 휴대폰번호와 동일한 사용자가 있는지 여부 확인, true면 존재'
      operationId: doesMemberExistByIdAndNameAndMobileUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: memberId
          in: query
          description: 아이디
          required: true
          type: string
        - name: memberName
          in: query
          description: 이름
          required: true
          type: string
        - name: mobileNo
          in: query
          description: 휴대전화 번호
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberExistResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/mobile/exist:
    get:
      tags:
        - '[Profile]'
      summary: 해당 쇼핑몰에 휴대폰번호 중복여부 확인
      description: '해당 쇼핑몰에 입력한 휴대폰번호가 있는지 확인, true면 중복'
      operationId: doesMobileExistInMallUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: mobileNo
          in: query
          description: 휴대전화 번호
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MemberExistResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/openId:
    post:
      tags:
        - '[Profile]'
      summary: OpenId 회원 가입
      description: OpenId 회원 가입 처리
      operationId: registerOpenIdMemberUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - in: body
          name: param
          description: param
          required: true
          schema:
            $ref: '#/definitions/OpenIdJoinRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProfileResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/order-options/product-reviewable:
    get:
      tags:
        - '[Product] > Review'
      summary: 내 상품평 작성가능 목록
      description: 내가 상품평을 작성할 수 있는 구매확정 상품옵션 목록조회 (페이징)
      operationId: 내 상품평 작성가능 목록
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: pageNumber
          in: query
          description: 페이지 번호
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          description: 한 페이지당 노출 수
          required: false
          type: integer
          format: int32
        - name: hasTotalCount
          in: query
          description: '목록 카운트 포함 여부(default: false)'
          required: false
          type: boolean
        - name: startYmd
          in: query
          description: 조회 시작일(yyyy-MM-dd)
          required: true
          type: string
        - name: endYmd
          in: query
          description: 조회 종료일(yyyy-MM-dd)
          required: true
          type: string
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ReviewableProductsResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/profile/order-options/{orderOptionNo}/claim':
    get:
      tags:
        - '[Profile] > MyOrder'
      summary: 클레임 신청가능 정보 조회
      description: 선택옵션을 클레임 신청하기 위한 화면에 진입합니다.
      operationId: applyClaimUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: orderOptionNo
          in: path
          description: 주문상품옵션번호
          required: true
          type: integer
          format: int64
        - name: claimType
          in: query
          description: claimType
          required: true
          type: string
          enum:
            - CANCEL
            - RETURN
            - EXCHANGE
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApplyClaimResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/profile/order-options/{orderOptionNo}/claim/cancel':
    post:
      tags:
        - '[Profile] > MyOrder'
      summary: 주문취소
      description: 선택옵션을 취소합니다.
      operationId: applyCancelUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: orderOptionNo
          in: path
          description: 주문상품옵션번호
          required: true
          type: integer
          format: int64
        - in: body
          name: claimRequest
          description: 취소신청정보
          required: true
          schema:
            $ref: '#/definitions/ClaimCancelRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/profile/order-options/{orderOptionNo}/claim/estimate':
    get:
      tags:
        - '[Profile] > MyOrder'
      summary: 클레임 시 변경되는 주문 환불계산
      description: 선택옵션을 취소할 경우 환불 예상금액을 미리 계산합니다.
      operationId: estimateClaimUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: orderOptionNo
          in: path
          description: 주문상품옵션번호
          required: true
          type: integer
          format: int64
        - name: claimType
          in: query
          description: 클레임타입(취소/반품/교환)
          required: true
          type: string
          enum:
            - CANCEL
            - RETURN
            - EXCHANGE
        - name: productCnt
          in: query
          description: 취소/반품할 제품수량
          required: true
          type: integer
          format: int32
        - name: claimReasonType
          in: query
          description: '클레임사유(단순변심,상품불량/파손,배송누락/오배송,기타 등)'
          required: true
          type: string
          enum:
            - CHANGE_MIND
            - DEFECTIVE_PRODUCT
            - WRONG_DELIVERY
            - OUT_OF_STOCK_SYSTEM
            - CANCEL_BEFORE_PAY
            - WRONG_PRODUCT_DETAIL
            - DELAY_DELIVERY
            - OUT_OF_STOCK
            - OTHERS_SELLER
            - OTHERS_BUYER
        - name: returnWayType
          in: query
          required: true
          type: string
          enum:
            - SELLER_COLLECT
            - BUYER_DIRECT_RETURN
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClaimEstimateAmount'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/profile/order-options/{orderOptionNo}/claim/exchange':
    post:
      tags:
        - '[Profile] > MyOrder'
      summary: 교환신청
      description: 선택옵션을 교환합니다.
      operationId: applyExchangeUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: orderOptionNo
          in: path
          description: 주문상품옵션번호
          required: true
          type: integer
          format: int64
        - in: body
          name: claimRequest
          description: 반품신청정보
          required: true
          schema:
            $ref: '#/definitions/ClaimExchangeRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/profile/order-options/{orderOptionNo}/claim/result':
    get:
      tags:
        - '[Profile] > MyOrder'
      summary: 클레임 상세보기
      description: 클레임 세부 내역을 조회합니다
      operationId: viewClaimUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: orderOptionNo
          in: path
          description: 주문상품옵션번호
          required: true
          type: integer
          format: int64
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClaimResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/profile/order-options/{orderOptionNo}/claim/return':
    post:
      tags:
        - '[Profile] > MyOrder'
      summary: 반품신청
      description: 선택옵션을 반품합니다.
      operationId: applyReturnUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: orderOptionNo
          in: path
          description: 주문상품옵션번호
          required: true
          type: integer
          format: int64
        - in: body
          name: claimRequest
          description: 반품신청정보
          required: true
          schema:
            $ref: '#/definitions/ClaimReturnRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/profile/order-options/{orderOptionNo}/confirm':
    put:
      tags:
        - '[Profile] > MyOrder'
      summary: 상품 주문 구매확정
      description: '배송준비중, 배송중 상태의 상품주문을 구매확정 처리 합니다.'
      operationId: orderConfirmUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: orderOptionNo
          in: path
          description: 주문상품옵션번호
          required: true
          type: integer
          format: int64
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Value
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/orders:
    get:
      tags:
        - '[Profile] > MyOrder'
      summary: 주문 리스트 조회
      description: 시작일 종료일 사이의 주문리스트를 조회합니다.
      operationId: listUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: orderRequestTypes
          in: query
          description: 주문상태 (null인 경우 전체)
          required: false
          type: array
          items:
            type: string
            enum:
              - DEPOSIT_WAIT
              - PAY_DONE
              - PRODUCT_PREPARE
              - DELIVERY_PREPARE
              - DELIVERY_ING
              - DELIVERY_DONE
              - BUY_CONFIRM
              - CANCEL_DONE
              - RETURN_DONE
              - EXCHANGE_DONE
              - CANCEL_PROCESSING
              - RETURN_PROCESSING
              - EXCHANGE_PROCESSING
          collectionFormat: multi
          enum:
            - DEPOSIT_WAIT
            - PAY_DONE
            - PRODUCT_PREPARE
            - DELIVERY_PREPARE
            - DELIVERY_ING
            - DELIVERY_DONE
            - BUY_CONFIRM
            - CANCEL_DONE
            - RETURN_DONE
            - EXCHANGE_DONE
            - CANCEL_PROCESSING
            - RETURN_PROCESSING
            - EXCHANGE_PROCESSING
        - name: pageNumber
          in: query
          description: 페이지 번호
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          description: 한 페이지당 노출 수
          required: false
          type: integer
          format: int32
        - name: hasTotalCount
          in: query
          description: '목록 카운트 포함 여부(default: false)'
          required: false
          type: boolean
        - name: startYmd
          in: query
          description: '조회 시작일(yyyy-MM-dd), null인 경우 3개월 전'
          required: false
          type: string
        - name: endYmd
          in: query
          description: '조회 종료일(yyyy-MM-dd), null인 경우 오늘'
          required: false
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MyOrderResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/orders/summary/amount:
    get:
      tags:
        - '[Profile] > MyOrder'
      summary: 상태별 주문 수량 및 금액
      description: 시작일 종료일 사이의 상태별 주문 수량이 조회됩니다.
      operationId: getTotalCountAndAmountUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: startYmd
          in: query
          description: 구매일 조회 시작(입력 안 할 경우 3개월)
          required: false
          type: string
        - name: endYmd
          in: query
          description: 구매일 조회 종료(입력 안 할 경우 오늘)
          required: false
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderCountAndAmount'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/orders/summary/status:
    get:
      tags:
        - '[Profile] > MyOrder'
      summary: 상태별 주문 수량
      description: 시작일 종료일 사이의 상태별 주문 수량이 조회됩니다.
      operationId: summaryUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: startYmd
          in: query
          description: 조회시작일
          required: false
          type: string
          default: '2017-02-01'
        - name: endYmd
          in: query
          description: 조회종료일
          required: false
          type: string
          default: '2017-02-31'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderCountByStatus'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/profile/orders/{orderNo}':
    get:
      tags:
        - '[Profile] > MyOrder'
      summary: 주문 상세조회
      description: 주문번호로 상세 데이터 조회합니다.
      operationId: detailUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: orderNo
          in: path
          description: 주문번호
          required: true
          type: string
        - name: orderRequestType
          in: query
          description: 주문옵션타입
          required: false
          type: string
          enum:
            - All
            - NORMAL
            - CLAIM
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserOrderDetail'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/profile/orders/{orderNo}/deliveries':
    put:
      tags:
        - '[Profile] > MyOrder'
      summary: 주문단위 배송정보 수정
      description: 주문번호에 속한 배송정보를 일괄 수정합니다.
      operationId: modifyDeliveryInfoUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: orderNo
          in: path
          description: 주문번호
          required: true
          type: string
        - name: add
          in: query
          description: 추가여부
          required: true
          type: boolean
        - in: body
          name: addressRequest
          description: addressRequest
          required: true
          schema:
            $ref: '#/definitions/AddressRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/password/no-authentication/after-certification:
    put:
      tags:
        - '[Profile]'
      summary: '본인인증 후, 비밀번호 변경'
      description: 로그인하지않은 사용자의 비밀번호 변경 (본인인증 사용) - <a href='/kcp-cert/index.html'>본인인증</a>
      operationId: updatePasswordInIdentityCertificationUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/NoAuthenticationPasswordCertificationRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/password/no-authentication/certificated-by-email:
    put:
      tags:
        - '[Profile]'
      summary: 'email 인증 후, 비밀번호 변경'
      description: 로그인하지않은 사용자의 비밀번호 변경 (email 인증 사용)
      operationId: updatePasswordInEmailCertificationUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/NoAuthenticationPasswordEmailRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/password/no-authentication/certificated-by-sms:
    put:
      tags:
        - '[Profile]'
      summary: 'SMS 인증 후, 비밀번호 변경'
      description: 로그인하지않은 사용자의 비밀번호 변경 (SMS 인증 사용)
      operationId: updatePasswordInSmsCertificationUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/NoAuthenticationPasswordSmsRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/payco/sync:
    put:
      tags:
        - '[Profile]'
      summary: Payco 회원정보 정보 갱신
      description: 페이코의 최신 회원정보를 NCP에 Update함. 본인인증 여부 확인 시 사용
      operationId: updatePaycoProfileUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProfileResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/product-inquiries:
    get:
      tags:
        - '[Product] > Inquiry'
      summary: 내 상품문의 목록
      description: 내 상품문의 조회 with paging
      operationId: getMyProductInquiresUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: pageNumber
          in: query
          description: 페이지 번호
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          description: 한 페이지당 노출 수
          required: false
          type: integer
          format: int32
        - name: hasTotalCount
          in: query
          description: '목록 카운트 포함 여부(default: false)'
          required: false
          type: boolean
        - name: accessToken
          in: header
          description: accessToken(로그인 상태일 경우만)
          required: false
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProductInquiriesResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/product-reviews:
    get:
      tags:
        - '[Product] > Review'
      summary: 내 상품평 목록
      description: |-
        내 상품평 목록 가져오기 (페이징)
         * 파일 첨부 유무
        (Y = 파일 첨부 / N = 파일 미첨부 / 빈값 = ALL)
      operationId: 내 상품평 목록
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: productNo
          in: path
          description: 상품 번호
          required: true
          type: integer
          format: int32
        - name: pageNumber
          in: query
          description: 페이지 번호
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          description: 한 페이지당 노출 수
          required: false
          type: integer
          format: int32
        - name: hasTotalCount
          in: query
          description: '목록 카운트 포함 여부(default: false)'
          required: false
          type: boolean
        - name: attachYn
          in: query
          description: 첨부파일 유무
          required: false
          type: string
        - name: startYmd
          in: query
          description: 조회 시작일
          required: true
          type: string
        - name: endYmd
          in: query
          description: 조회 종료일
          required: true
          type: string
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MyReviewsResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/recent-products:
    get:
      tags:
        - '[Profile] > Recent-products'
      summary: 최근 본 상품 조회
      description: 로그인 이후에만 호출 가능(accessToken)
      operationId: getRecentProductsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    post:
      tags:
        - '[Profile] > Recent-products'
      summary: 최근 본 상품 등록
      description: '로그인 이후에만 호출 가능(accessToken), 최근 본 50개 상품까지 서버에서 저장'
      operationId: addRecentProductUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: productNo
          description: 상품번호
          required: true
          schema:
            type: integer
            format: int32
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/shipping-addresses:
    get:
      tags:
        - '[Profile] > Shipping Addresses'
      summary: 배송지 목록 가져오기
      description: >-
        주소지정보를 가져옵니다. 목록은 기본배송지가 가장 앞에 오고 최근 사용 역순으로 나열 됩니다. defaultAddress :
        기본배송지, bookedAddresses : 주소록에 저장된 주소지목록, recentAddresses : 최근에 사용한 주소지
        목록
      operationId: getAddressResponseUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ShippingAddressResponse'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    post:
      tags:
        - '[Profile] > Shipping Addresses'
      summary: 배송지 등록
      description: >-
        주소록 배송지(AddressType.BOOK)는 제한없이 등록이 가능하고 최근 배송지(AddressType.RECENT)는 최대
        10개 까지 등록이 됩니다. 최근 배송지가 10개가 등록된 상태에서 추가로 최근 배송지를 등록하면 기본 배송지가 아닌 최근
        배송지중에 사용한지 가장 오래된 최근 배송지가 삭제 됩니다.
      operationId: addAddressUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - in: body
          name: addressRequest
          description: addressRequest
          required: true
          schema:
            $ref: '#/definitions/AddressRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Address'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  /profile/shipping-addresses/recent:
    get:
      tags:
        - '[Profile] > Shipping Addresses'
      summary: 최근 배송지 가져오기
      description: 기본배송지 1개와 최근에 사용한 배송지 4개를 가져옵니다.
      operationId: getRecentAddressesUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: clientId
          in: header
          description: NCP clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Address'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/profile/shipping-addresses/{addressNo}':
    get:
      tags:
        - '[Profile] > Shipping Addresses'
      summary: 배송지 가져오기
      operationId: getAddressUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: addressNo
          in: path
          description: addressNo
          required: true
          type: integer
          format: int32
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Address'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    put:
      tags:
        - '[Profile] > Shipping Addresses'
      summary: 배송지 수정
      operationId: modifyAddressUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: addressNo
          in: path
          description: addressNo
          required: true
          type: integer
          format: int32
        - in: body
          name: addressRequest
          description: addressRequest
          required: true
          schema:
            $ref: '#/definitions/AddressRequest'
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Address'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
    delete:
      tags:
        - '[Profile] > Shipping Addresses'
      summary: 배송지 삭제
      operationId: removeAddressUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: addressNo
          in: path
          description: addressNo
          required: true
          type: integer
          format: int32
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
  '/profile/shipping-addresses/{addressNo}/default':
    put:
      tags:
        - '[Profile] > Shipping Addresses'
      summary: 기본 배송지 수정
      operationId: changeDefaultAddressUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: accessToken
          in: header
          description: accessToken
          required: true
          type: string
        - name: addressNo
          in: path
          description: addressNo
          required: true
          type: integer
          format: int32
        - name: clientId
          in: header
          description: clientId
          required: true
          type: string
          default: f7IuuZPHwmc7hGfGmbhHog==
        - name: Version
          in: header
          required: true
          type: string
          default: '1.0'
          enum:
            - '1.0'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Address'
        '201':
          description: 생성 완료
        '204':
          description: 성공-본문없음
        '400':
          description: 유효성 검증 오류
        '401':
          description: 인증 필요
        '404':
          description: '존재하지 않는 API '
        '500':
          description: 서버 오류
definitions:
  AccessTokenResponse:
    type: object
    required:
      - accessToken
      - expireIn
    properties:
      accessToken:
        type: string
        description: NCP 토큰
      expireIn:
        type: integer
        format: int32
        description: 만료까지 남은시간(초)
  Account:
    type: object
    properties:
      displayType:
        type: string
        description: '구좌 노출 방식(순차, 랜덤)'
        enum:
          - SEQUENTIAL
          - RANDOM
      height:
        type: integer
        format: int32
        description: 구좌 높이
      width:
        type: integer
        format: int32
        description: 구좌 넓이
      banners:
        type: array
        description: 배너 목록
        items:
          $ref: '#/definitions/Banner'
  AccumulationResponse:
    type: object
    required:
      - accumulationAmt
      - accumulationNo
      - accumulationReserveReason
      - accumulationStatus
      - expireYmdt
      - orderNo
      - reasonDetail
      - registerYmdt
      - totalAvailableAmt
    properties:
      accumulationNo:
        type: integer
        format: int32
        description: 적립금 번호
      accumulationAmt:
        type: integer
        format: int32
        description: 적립금액
      registerYmdt:
        type: string
        format: date-time
        description: 등록일
      expireYmdt:
        type: string
        format: date-time
        description: 만료일
      accumulationReserveReason:
        type: string
        description: 적립사유 코드
        enum:
          - ADD_AFTER_PAYMENT
          - ADD_AFTER_EVENT_PAYMENT
          - ADD_AFTER_REPLACE_PAYMENT
          - ADD_POSTING
          - ADD_CANCEL
          - ADD_RETURN
          - ADD_REPLACE
          - ADD_MANUAL
          - ADD_EVENT
          - SUB_PAYMENT_USED
          - SUB_EXTRA_PAYMENT_USED
          - SUB_CANCEL
          - SUB_DELETE_POSTING
          - SUB_EXPIRED
          - SUB_MANUAL
      reasonDetail:
        type: string
        description: 적립사유 상세
      accumulationStatus:
        type: string
        description: >-
          적립상태 코드 GIVE_AVAILABLE:지급, GIVE_CANCELED:지급취소, SUBTRACTION_USED:차감,
          SUBTRACTION_CANCELED:차감취소
        enum:
          - GIVE_AVAILABLE
          - GIVE_CANCELED
          - SUBTRACTION_USED
          - SUBTRACTION_CANCELED
      orderNo:
        type: string
        description: 주문번호
      totalAvailableAmt:
        type: integer
        format: int32
        description: 적립금 총액
  AccumulationSummaryResponse:
    type: object
    required:
      - totalAvailableAmt
      - totalExpireAmt
    properties:
      totalAvailableAmt:
        type: integer
        format: int32
      totalExpireAmt:
        type: integer
        format: int32
  AccumulationsResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/AccumulationResponse'
      totalCount:
        type: integer
        format: int64
  AdditionalProduct:
    type: object
    properties:
      label:
        type: string
        description: 추가상품명
      values:
        type: array
        description: 추가상품값
        items:
          $ref: '#/definitions/AdditionalProductValue'
  AdditionalProductValue:
    type: object
    required:
      - saleType
    properties:
      additionalProductNo:
        type: integer
        format: int32
        description: 추가상품 번호
      value:
        type: string
        description: 추가상품값
      salePrice:
        type: number
        description: 추가상품 가격
      saleType:
        type: string
        description: '판매타입(판매가능, 품절)'
        enum:
          - AVAILABLE
          - SOLDOUT
      stockCnt:
        type: integer
        format: int32
        description: 재고
  Address:
    type: object
    required:
      - addressNo
      - addressType
      - countryCd
      - customsIdNumber
      - defaultYn
      - lastUseYmdt
      - memberNo
      - receiverAddress
      - receiverContact1
      - receiverContact2
      - receiverDetailAddress
      - receiverJibunAddress
      - receiverName
      - receiverZipCd
      - registerYmdt
    properties:
      addressName:
        type: string
        example: 홍길동집
        description: 주소록명
      addressNo:
        type: integer
        format: int32
        example: 1
        description: 배송지 번호
      addressType:
        type: string
        example: RECENT
        description: 배송지타입
        enum:
          - BOOK
          - RECENT
      city:
        type: string
        example: Los Angeles
        description: 도시
      countryCd:
        type: string
        example: KR
        description: 국가코드
        enum:
          - AX
          - AD
          - AU
          - AT
          - BH
          - BE
          - BZ
          - BR
          - BN
          - BG
          - CA
          - E2
          - CL
          - CN
          - CO
          - CR
          - CY
          - CZ
          - DK
          - EC
          - EG
          - SV
          - EE
          - FR
          - GF
          - DE
          - GR
          - GL
          - GU
          - GT
          - GG
          - GY
          - HK
          - HU
          - IS
          - ID
          - IE
          - IL
          - IT
          - JP
          - JE
          - JO
          - KR
          - KW
          - LV
          - LB
          - LI
          - LT
          - LU
          - MO
          - P2
          - MY
          - NL
          - NZ
          - G2
          - 'NO'
          - PY
          - PE
          - PL
          - PT
          - RO
          - RU
          - SM
          - SA
          - G3
          - SG
          - SK
          - SI
          - ES
          - CH
          - TW
          - TH
          - TR
          - AE
          - GB
          - US
          - U2
          - UY
          - VD
          - G4
          - YD
      customsIdNumber:
        type: string
        example: P12341234
        description: 개인고유통관부호
      defaultYn:
        type: string
        example: 'Y'
        description: 기본 배송지 여부
      lastUseYmdt:
        type: string
        format: date-time
        example: '2017-01-01 12:32:00'
        description: 배송지 마지막 사용일
      memberNo:
        type: integer
        format: int32
        example: 1
        description: 회원 번호
      receiverAddress:
        type: string
        example: 경기도 성남시 분당구 대왕판교로645번길 12
        description: 배송지 주소
      receiverContact1:
        type: string
        example: 010-0000-0000
        description: 연락처1
      receiverContact2:
        type: string
        example: 010-0000-0000
        description: 연락처2
      receiverDetailAddress:
        type: string
        example: 16 NHN 플레이뮤지엄
        description: 배송지 상세 주소
      receiverJibunAddress:
        type: string
        example: 경기도 성남시 분당구 삼평동 629번지 NHN 플레이뮤지엄
        description: 배송지 지번
      receiverName:
        type: string
        example: 홍길동
        description: 수령자 명
      receiverZipCd:
        type: string
        example: '13487'
        description: 배송지 우편 번호
      registerYmdt:
        type: string
        format: date-time
        example: '2017-01-01 12:32:00'
        description: 배송지 등록일
      state:
        type: string
        example: CA
        description: 주/지역
  AddressRequest:
    type: object
    required:
      - addressType
      - defaultYn
      - receiverAddress
      - receiverContact1
      - receiverDetailAddress
      - receiverName
      - receiverZipCd
    properties:
      addressType:
        type: string
        example: ADTP0001
        description: 배송지타입
        enum:
          - BOOK
          - RECENT
      countryCd:
        type: string
        description: '국가코드(default:mall의 국가코드)'
        enum:
          - AX
          - AD
          - AU
          - AT
          - BH
          - BE
          - BZ
          - BR
          - BN
          - BG
          - CA
          - E2
          - CL
          - CN
          - CO
          - CR
          - CY
          - CZ
          - DK
          - EC
          - EG
          - SV
          - EE
          - FR
          - GF
          - DE
          - GR
          - GL
          - GU
          - GT
          - GG
          - GY
          - HK
          - HU
          - IS
          - ID
          - IE
          - IL
          - IT
          - JP
          - JE
          - JO
          - KR
          - KW
          - LV
          - LB
          - LI
          - LT
          - LU
          - MO
          - P2
          - MY
          - NL
          - NZ
          - G2
          - 'NO'
          - PY
          - PE
          - PL
          - PT
          - RO
          - RU
          - SM
          - SA
          - G3
          - SG
          - SK
          - SI
          - ES
          - CH
          - TW
          - TH
          - TR
          - AE
          - GB
          - US
          - U2
          - UY
          - VD
          - G4
          - YD
      customsIdNumber:
        type: string
        description: 개인통관고유부호
      defaultYn:
        type: string
        description: 기본배송지 여부
      receiverAddress:
        type: string
        description: 주소
      receiverContact1:
        type: string
        description: 수령자연락처1
      receiverContact2:
        type: string
        description: 수령자연락처2
      receiverDetailAddress:
        type: string
        description: 상세주소
      receiverJibunAddress:
        type: string
        description: 지번주소(대한민국 주소의 경우는 필수 값)
      receiverName:
        type: string
        description: 수령자명
      receiverZipCd:
        type: string
        description: 우편번호
  AddressResponse:
    type: object
    required:
      - jibunAddress
      - relatedJibun
      - zipCode
    properties:
      address:
        type: string
      detailAddress:
        type: string
      jibunAddress:
        type: string
        example: 경기도 성남시 분당구 삼평동 629
        description: 지번 주소
      relatedJibun:
        type: string
        example: 삼평동 629
        description: 관련 지번
      zipCode:
        type: string
        example: '13487'
        description: 우편번호
  AddressesResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/AddressResponse'
      totalCount:
        type: integer
        format: int32
  ApplyClaimResponse:
    type: object
    properties:
      availableBanks:
        type: array
        description: 선택가능한은행명
        items:
          $ref: '#/definitions/BankInfo'
      claimReasonTypes:
        type: array
        description: 선택가능한 사유 목록
        items:
          type: string
          enum:
            - CHANGE_MIND
            - DEFECTIVE_PRODUCT
            - WRONG_DELIVERY
            - OUT_OF_STOCK_SYSTEM
            - CANCEL_BEFORE_PAY
            - WRONG_PRODUCT_DETAIL
            - DELAY_DELIVERY
            - OUT_OF_STOCK
            - OTHERS_SELLER
            - OTHERS_BUYER
      claimType:
        type: string
        description: 클레임 종류
        enum:
          - CANCEL
          - RETURN
          - EXCHANGE
      exchangeAddress:
        description: 교환배송지
        $ref: '#/definitions/ShippingAddress'
      exchangeableOption:
        description: 교환가능상품옵션
        $ref: '#/definitions/OptionResponse'
      originalOption:
        description: 원래 상품
        $ref: '#/definitions/UserOrderProductOption'
      payType:
        type: string
        description: 환불 페이 타입
        enum:
          - CREDIT_CARD
          - EASY_ACCOUNT
          - MOBILE
          - REALTIME_ACCOUNT_TRANSFER
          - VIRTUAL_ACCOUNT
          - GIFT
          - ATM
          - PAYCO
          - ZERO_PAY
          - ACCUMULATION
          - ACCOUNT
          - PHONE_BILL
          - POINT
          - YPAY
          - KPAY
          - PAYPIN
          - INIPAY
          - PAYPAL
          - STRIPE
          - ETC
      refundAccount:
        description: 등록되어있는 환불계좌 정보
        $ref: '#/definitions/BankAccountInfo'
      returnAddress:
        description: 수거지
        $ref: '#/definitions/ShippingAddress'
      returnWayType:
        type: string
        description: 반품수거방법(출고전교환 시 null)
        enum:
          - SELLER_COLLECT
          - BUYER_DIRECT_RETURN
  ApplyCouponApiRequest:
    type: object
    properties:
      cartCouponIssueNo:
        type: integer
        format: int64
        description: 장바구니 쿠폰 발행 번호
      deliveryCouponIssueNo:
        type: integer
        format: int64
        description: 배송비 쿠폰 발행 번호
      promotionCode:
        type: string
        description: 쿠폰 할인 코드
      productCoupons:
        type: array
        description: 상품쿠폰 정보
        items:
          $ref: '#/definitions/ApplyProductCouponApiParam'
  ApplyProductCouponApiParam:
    type: object
    properties:
      couponIssueNo:
        type: integer
        format: int64
        description: 상품쿠폰 발행번호
      plusCouponIssueNo:
        type: integer
        format: int64
        description: 상품 플러스 쿠폰 발행번호
      plusPromotionCode:
        type: string
        description: 상품 플러스 프로모션 코드
      productNo:
        type: integer
        format: int32
        description: 상품번호
      promotionCode:
        type: string
        description: 상품 쿠폰 프로모션 코드
  BankAccountInfo:
    type: object
    required:
      - bank
      - bankAccount
      - bankDepositorName
    properties:
      bank:
        type: string
        description: 은행
        enum:
          - KDB
          - IBK
          - KB
          - KEB
          - SUHYUP
          - NH
          - WOORI
          - SC
          - CITY
          - KFCC
          - CU
          - EPOST
          - HANA
          - SHINHAN
          - DAEGU
          - PUSAN
          - GWANGJU
          - JEJU
          - JEONBUK
          - GYEONGNAM
          - SANGHO
          - HSBC
          - DEUTSCHE
          - NFCF
          - KBANK
          - YUANTA
          - HYUNDAI
          - MIRAE
          - DAEWOO
          - SAMSUNG
          - HANKOOK
          - WOORI_INVEST
          - KYOBO
          - HI_INVEST
          - HMC_INVEST
          - KIWOOM
          - ETRADE
          - SK
          - DAISHIN
          - SOLOMON_INVEST
          - HANHWA
          - HANA_INVEST
          - SHINHAN_INVEST
          - DONGBU
          - EUGENE_INVEST
          - MERITZ_COMPREHENSIVE
          - NH_INVEST
          - BOOKOOK
          - SHINYOUNG
          - LIG_INVEST
      bankAccount:
        type: string
        description: 계좌번호
      bankDepositorName:
        type: string
        description: 예금주명
  BankInfo:
    type: object
    properties:
      bank:
        type: string
        enum:
          - KDB
          - IBK
          - KB
          - KEB
          - SUHYUP
          - NH
          - WOORI
          - SC
          - CITY
          - KFCC
          - CU
          - EPOST
          - HANA
          - SHINHAN
          - DAEGU
          - PUSAN
          - GWANGJU
          - JEJU
          - JEONBUK
          - GYEONGNAM
          - SANGHO
          - HSBC
          - DEUTSCHE
          - NFCF
          - KBANK
          - YUANTA
          - HYUNDAI
          - MIRAE
          - DAEWOO
          - SAMSUNG
          - HANKOOK
          - WOORI_INVEST
          - KYOBO
          - HI_INVEST
          - HMC_INVEST
          - KIWOOM
          - ETRADE
          - SK
          - DAISHIN
          - SOLOMON_INVEST
          - HANHWA
          - HANA_INVEST
          - SHINHAN_INVEST
          - DONGBU
          - EUGENE_INVEST
          - MERITZ_COMPREHENSIVE
          - NH_INVEST
          - BOOKOOK
          - SHINYOUNG
          - LIG_INVEST
      label:
        type: string
  Banner:
    type: object
    properties:
      bannerName:
        type: string
        description: 배너명
      bannerImageUrl:
        type: string
        description: 배너 이미지 URL
      landingUrlType:
        type: string
        description: '배너 랜딩 URL 타입(일반, 이미지맵)'
        enum:
          - GENERAL
          - IMAGEMAP
      landingUrl:
        type: string
        description: 배너 랜딩 URL
      bannerOpenLocationType:
        type: string
        description: '배너 랜딩페이지 브라우저 타겟(현재창, 새창, HTML 태그의 target 속성 참고)'
        enum:
          - CURRENT
          - NEW
          - REF_URL
  BannerSectionResponse:
    type: object
    properties:
      bannerSectionNo:
        type: integer
        format: int32
        description: 섹션번호
      label:
        type: string
        description: 섹션명
      code:
        type: string
        description: 섹션코드
      accounts:
        type: array
        description: 구좌
        items:
          $ref: '#/definitions/Account'
  BaseInfo:
    type: object
    required:
      - imageUrls
      - productName
      - productNo
    properties:
      saleStartYmdt:
        type: string
        format: date-time
        description: 판매시작일시
      saleEndYmdt:
        type: string
        format: date-time
        description: 판매종료일시
      promotionText:
        type: string
        description: 홍보문구
      productNo:
        type: integer
        format: int32
        description: 상품번호
      productName:
        type: string
        description: 상품명
      productNameEn:
        type: string
        description: 영문 상품명
      imageUrls:
        type: array
        description: 상품 이미지URL
        items:
          type: string
      placeOriginEtcLabel:
        type: string
        description: '원산지(기타 직접입력, 수입사등 표기)'
      placeOriginLabel:
        type: string
        description: 원산지
      manufactureYmdt:
        type: string
        format: date-time
        description: 제조일자
      expirationYmdt:
        type: string
        format: date-time
        description: 유효일자
      contentHeader:
        type: string
        description: 상품설명HTML 상단
      content:
        type: string
        description: 상품설명HTML 본문
      contentFooter:
        type: string
        description: 상품설명HTML 하단
      dutyInfo:
        type: string
        description: 상품정보고시
  BooleanResponse:
    type: object
    required:
      - result
    properties:
      result:
        type: boolean
        example: false
  Brand:
    type: object
    properties:
      brandLogoImageUrl:
        type: string
      brandName:
        type: string
      brandNameEn:
        type: string
      brandNo:
        type: integer
        format: int32
  BrandDetailResponse:
    type: object
    properties:
      brandNo:
        type: integer
        format: int32
        description: 브랜드 번호
      name:
        type: string
        description: 브랜드 명
      nameEn:
        type: string
        description: 브랜드 영문명
      makerName:
        type: string
        description: 메이커 명
      logoImageUrl:
        type: string
        description: 로고 주소
      homepageUrl:
        type: string
        description: 브랜드 홈페이지 주소
      description:
        type: string
        description: 브랜드 설명
      mainImageContent:
        type: string
        description: 메인 이미지(html)
      detailContent:
        type: string
        description: 상세(html)
      categoryNos:
        type: array
        description: 해당 브랜드에 속한 카테고리 번호(배열)
        items:
          type: integer
          format: int32
  BrandResponse:
    type: object
    properties:
      brandNo:
        type: integer
        format: int32
        description: 브랜드 번호
      name:
        type: string
        description: 브랜드 명
      nameEn:
        type: string
        description: 브랜드 영문명
      makerName:
        type: string
        description: 메이커 명
      logoImageUrl:
        type: string
        description: 로고 주소
      homepageUrl:
        type: string
        description: 브랜드 홈페이지 주소
      description:
        type: string
        description: 브랜드 설명
      mainImageContent:
        type: string
        description: 메인 이미지(html)
      detailContent:
        type: string
        description: 상세(html)
  BrandsResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/BrandResponse'
      totalCount:
        type: integer
        format: int32
  CaptchaResponse:
    type: object
    required:
      - url
    properties:
      url:
        type: string
        description: 캡챠 이미지/오디오 url
  CartDeliveryGroup:
    type: object
    properties:
      orderProducts:
        type: array
        description: 주문상품
        items:
          $ref: '#/definitions/CartOrderProduct'
      deliveryAmt:
        type: number
        example: 2500
        description: 배송비
      deliveryPayType:
        type: string
        description: 배송비착불여부
        enum:
          - PAY_ON_DELIVERY
          - PREPAID_DELIVERY
      deliveryCondition:
        description: 배송조건
        $ref: '#/definitions/DeliveryConditionForDisplay'
      partnerName:
        type: string
        example: NCP
        description: 파트너명
  CartItemRequest:
    type: object
    required:
      - additionalProductNo
      - optionInputs
      - optionNo
      - orderCnt
      - productNo
    properties:
      productNo:
        type: integer
        format: int32
        example: 100398947
        description: 상품번호
      optionNo:
        type: integer
        format: int32
        example: 1258932
        description: 옵션번호
      additionalProductNo:
        type: integer
        format: int32
        example: 0
        description: 옵션번호
      orderCnt:
        type: integer
        format: int32
        example: 1
        description: 구매갯수
      optionInputs:
        type: array
        description: 구매자 입력형 옵션
        items:
          $ref: '#/definitions/OrderProductOptionInputRequest'
  CartOrderProduct:
    type: object
    properties:
      productNo:
        type: integer
        format: int32
        description: 상품 번호
      imageUrl:
        type: string
        description: 상품 url
      brandName:
        type: string
        description: 브랜드 명
      productName:
        type: string
        description: 상품 명
      liked:
        type: boolean
        example: false
        description: 찜상품 여부
      optionUsed:
        type: boolean
        example: false
        description: 옵션사용여부
      additionalProducts:
        type: array
        description: 추가상품
        items:
          $ref: '#/definitions/OrderAdditionalProduct'
      orderProductOptions:
        type: array
        description: 옵션
        items:
          $ref: '#/definitions/CartOrderProductOption'
      buyAmt:
        type: number
        description: 구매금액 합
  CartOrderProductOption:
    type: object
    properties:
      price:
        description: 최초주문금액정보
        $ref: '#/definitions/OptionPrice'
      soldOut:
        type: boolean
        example: false
        description: '품절여부(true:품절 false:구매가능)'
      validInfo:
        description: 유효성 정보
        $ref: '#/definitions/OrderProductOptionValidInfo'
      cartNo:
        type: integer
        format: int32
        description: 장바구니 번호
      imageUrl:
        type: string
        description: 옵션 이미지 URL
      optionName:
        type: string
        description: 옵션명
      optionValue:
        type: string
        description: 옵션값
      orderCnt:
        type: integer
        format: int32
        description: 주문수량
      stockCnt:
        type: integer
        format: int32
        description: 재고 갯수
      productNo:
        type: integer
        format: int32
        description: 상품번호
      optionNo:
        type: integer
        format: int32
        description: 옵션번호
      optionInputs:
        type: array
        description: 소비자 입력형 옵션
        items:
          $ref: '#/definitions/OrderProductOptionInputRequest'
    description: 옵션 공통
  CartResponse:
    type: object
    required:
      - deliveryGroups
    properties:
      deliveryGroups:
        type: array
        description: 합배송 그룹별 상품 목록
        items:
          $ref: '#/definitions/CartDeliveryGroup'
      price:
        description: 금액정보
        $ref: '#/definitions/Price'
  Category:
    type: object
    properties:
      fullCategoryLabel:
        type: string
        description: 전체 카테고리 명
      categories:
        type: array
        description: 세부 카테고리 정보
        items:
          $ref: '#/definitions/CategoryInner'
  CategoryInner:
    type: object
    properties:
      label:
        type: string
        description: 카테고리 명
      depth:
        type: integer
        format: int32
        description: 뎁스
      categoryNo:
        type: integer
        format: int32
        description: 카테고리 번호
  CategoryResponse:
    type: object
    properties:
      multiLevelCategories:
        type: array
        description: 카테고리 목록(계층)
        items:
          $ref: '#/definitions/MultiLevelCategory'
      flatCategories:
        type: array
        description: 카테고리 목록
        items:
          $ref: '#/definitions/FlatCategory'
  ClaimCancelRequest:
    type: object
    required:
      - claimReasonDetail
      - claimReasonType
      - claimType
      - productCnt
      - returnWayType
      - saveBankAccountInfo
    properties:
      claimType:
        type: string
        description: 클레임타입(취소/반품/교환)
        enum:
          - CANCEL
          - RETURN
          - EXCHANGE
      productCnt:
        type: integer
        format: int32
        description: 취소/반품할 제품수량
      claimReasonType:
        type: string
        description: '클레임사유(단순변심,상품불량/파손,배송누락/오배송,기타 등)'
        enum:
          - CHANGE_MIND
          - DEFECTIVE_PRODUCT
          - WRONG_DELIVERY
          - OUT_OF_STOCK_SYSTEM
          - CANCEL_BEFORE_PAY
          - WRONG_PRODUCT_DETAIL
          - DELAY_DELIVERY
          - OUT_OF_STOCK
          - OTHERS_SELLER
          - OTHERS_BUYER
      claimReasonDetail:
        type: string
        example: 변심
        description: 상세사유
      bankAccountInfo:
        description: 환불계좌(현금환불인 경우)
        $ref: '#/definitions/BankAccountInfo'
      saveBankAccountInfo:
        type: boolean
        example: true
        description: 환불계좌정보 저장 여부
      returnWayType:
        type: string
        description: 반품수거방법(판매자수거요청/구매자직접반품)
        enum:
          - SELLER_COLLECT
          - BUYER_DIRECT_RETURN
  ClaimEstimateAmount:
    type: object
    properties:
      originalPriceInfo:
        description: 클레임신청한 주문 금액
        $ref: '#/definitions/ClaimedPriceInfo'
      changedPriceInfo:
        description: 클레임시 발생한 차감 금액
        $ref: '#/definitions/ClaimedPriceInfo'
      refundPayAmt:
        type: number
        description: 환불금액
      refundSubPayAmt:
        type: number
        description: 적립금환불금액
  ClaimExchangeRequest:
    type: object
    required:
      - claimReasonDetail
      - claimReasonType
      - claimType
      - exchangeAddress
      - exchangeOption
      - productCnt
      - returnAddress
      - returnWayType
      - saveBankAccountInfo
    properties:
      claimType:
        type: string
        description: 클레임타입(취소/반품/교환)
        enum:
          - CANCEL
          - RETURN
          - EXCHANGE
      productCnt:
        type: integer
        format: int32
        description: 취소/반품할 제품수량
      claimReasonType:
        type: string
        description: '클레임사유(단순변심,상품불량/파손,배송누락/오배송,기타 등)'
        enum:
          - CHANGE_MIND
          - DEFECTIVE_PRODUCT
          - WRONG_DELIVERY
          - OUT_OF_STOCK_SYSTEM
          - CANCEL_BEFORE_PAY
          - WRONG_PRODUCT_DETAIL
          - DELAY_DELIVERY
          - OUT_OF_STOCK
          - OTHERS_SELLER
          - OTHERS_BUYER
      claimReasonDetail:
        type: string
        example: 변심
        description: 상세사유
      bankAccountInfo:
        description: 환불계좌(현금환불인 경우)
        $ref: '#/definitions/BankAccountInfo'
      saveBankAccountInfo:
        type: boolean
        example: true
        description: 환불계좌정보 저장 여부
      returnAddress:
        description: 반품배송지
        $ref: '#/definitions/ShippingAddress'
      returnWayType:
        type: string
        description: 반품수거방법(판매자수거요청/구매자직접반품)
        enum:
          - SELLER_COLLECT
          - BUYER_DIRECT_RETURN
      exchangeOption:
        description: 교환상품
        $ref: '#/definitions/ExchangeProductOption'
      exchangeAddress:
        description: 교환상품 배송지 정보
        $ref: '#/definitions/ShippingAddress'
  ClaimResponse:
    type: object
    required:
      - claimReasonType
    properties:
      claimReasonType:
        type: string
        description: '클레임사유(단순변심,상품불량/파손,배송누락/오배송,기타 등)'
        enum:
          - CHANGE_MIND
          - DEFECTIVE_PRODUCT
          - WRONG_DELIVERY
          - OUT_OF_STOCK_SYSTEM
          - CANCEL_BEFORE_PAY
          - WRONG_PRODUCT_DETAIL
          - DELAY_DELIVERY
          - OUT_OF_STOCK
          - OTHERS_SELLER
          - OTHERS_BUYER
      orderProductOptionNo:
        type: integer
        format: int64
        description: 주문옵션번호
      claimNo:
        type: integer
        format: int64
        description: 클레임번호
      claimType:
        type: string
        description: 클레임타입
        enum:
          - CANCEL
          - RETURN
          - EXCHANGE
      claimedOption:
        description: 취소/반품상품
        $ref: '#/definitions/UserOrderProductOption'
      exchangedOption:
        description: 교환상품
        $ref: '#/definitions/UserOrderProductOption'
      claimReasonDetail:
        type: string
        description: 클레임사유상세
      claimPriceInfo:
        description: 금액정보
        $ref: '#/definitions/ClaimEstimateAmount'
  ClaimReturnRequest:
    type: object
    required:
      - claimReasonDetail
      - claimReasonType
      - claimType
      - productCnt
      - returnAddress
      - returnWayType
      - saveBankAccountInfo
    properties:
      claimType:
        type: string
        description: 클레임타입(취소/반품/교환)
        enum:
          - CANCEL
          - RETURN
          - EXCHANGE
      productCnt:
        type: integer
        format: int32
        description: 취소/반품할 제품수량
      claimReasonType:
        type: string
        description: '클레임사유(단순변심,상품불량/파손,배송누락/오배송,기타 등)'
        enum:
          - CHANGE_MIND
          - DEFECTIVE_PRODUCT
          - WRONG_DELIVERY
          - OUT_OF_STOCK_SYSTEM
          - CANCEL_BEFORE_PAY
          - WRONG_PRODUCT_DETAIL
          - DELAY_DELIVERY
          - OUT_OF_STOCK
          - OTHERS_SELLER
          - OTHERS_BUYER
      claimReasonDetail:
        type: string
        example: 변심
        description: 상세사유
      bankAccountInfo:
        description: 환불계좌(현금환불인 경우)
        $ref: '#/definitions/BankAccountInfo'
      saveBankAccountInfo:
        type: boolean
        example: true
        description: 환불계좌정보 저장 여부
      returnAddress:
        description: 반품배송지
        $ref: '#/definitions/ShippingAddress'
      returnWayType:
        type: string
        description: 반품수거방법(판매자수거요청/구매자직접반품)
        enum:
          - SELLER_COLLECT
          - BUYER_DIRECT_RETURN
  ClaimedPriceInfo:
    type: object
    properties:
      productAmt:
        type: number
        description: 상품금액
      deliveryAmt:
        type: number
        description: 배송비(원격배송비포함)
      discountAmt:
        type: number
        description: 할인금액
      returnAndExchangeDeliveryAmt:
        type: number
        description: 반품/교환배송비
  Constraint:
    type: object
    properties:
      limitPayType:
        type: string
        example: PAYCO
        description: 쿠폰 사용조건 결제수단
        enum:
          - CREDIT_CARD
          - EASY_ACCOUNT
          - MOBILE
          - REALTIME_ACCOUNT_TRANSFER
          - VIRTUAL_ACCOUNT
          - GIFT
          - ATM
          - PAYCO
          - ZERO_PAY
          - ACCUMULATION
          - ACCOUNT
          - PHONE_BILL
          - POINT
          - YPAY
          - KPAY
          - PAYPIN
          - INIPAY
          - PAYPAL
          - STRIPE
          - ETC
      maxSalePrice:
        type: number
        example: 5000
        description: 쿠폰 사용조건 최대 구매액
      minDeliveryAmt:
        type: number
        example: 2500
        description: 쿠폰 사용조건 최소 배송비
      minSalePrice:
        type: number
        example: 1000
        description: 쿠폰 사용조건 최소 구매액
      possibleDaysOfWeek:
        type: string
        example: '[true,true,true,true,true,true,true]'
        description: 사용가능요일
      useEndYmdt:
        type: string
        format: date-time
        example: '2016-11-17'
        description: 사용 사용종료 일
  CountResponse:
    type: object
    required:
      - count
    properties:
      count:
        type: integer
        format: int64
  Counter:
    type: object
    properties:
      likeCnt:
        type: integer
        format: int64
        description: 좋아요 카운트
      reviewCnt:
        type: integer
        format: int64
        description: 상품평 카운트
      inquiryCnt:
        type: integer
        format: int64
        description: 상품문의 카운트
      myInquiryCnt:
        type: integer
        format: int64
        description: 내 상품문의 카운트(accessToken필요)
  Coupon:
    type: object
    properties:
      couponDiscountAmt:
        type: number
        description: 할인금액
      couponIssueNo:
        type: integer
        format: int64
        description: 쿠폰 발급 번호
      couponName:
        type: string
        description: 쿠폰 명
      couponNo:
        type: integer
        format: int32
        description: 쿠폰 번호
      couponTargetType:
        type: string
        description: 쿠폰 대상 유형
        enum:
          - ALL_PRODUCT
          - PRODUCT
          - BRAND
          - CATEGORY
          - PARTNER
          - EVENT
      couponType:
        type: string
        description: 쿠폰 유형(상품 / 상품플러스 / 장바구니 / 배송비
        enum:
          - PRODUCT
          - PRODUCT_PLUS
          - CART
          - CART_DELIVERY
      freeDeliveryYn:
        type: string
        description: 배송비무료여부
      reason:
        type: string
        description: 쿠폰 생성 사유
      selected:
        type: boolean
        example: false
        description: 선택여부
      usablePlatformTypes:
        type: string
        description: '사용 가능플랫폼(PC웹,모바일웹,모바일앱)'
      useEndYmdt:
        type: string
        format: date-time
        description: 사용종료일
  CouponIssueResponse:
    type: object
    properties:
      couponIssueNo:
        type: integer
        format: int64
        description: 쿠폰 발급 번호
      couponName:
        type: string
        description: 쿠폰 명
      couponNo:
        type: integer
        format: int32
        description: 쿠폰 번호
      useEndYmdt:
        type: string
        format: date-time
        description: 사용종료일
  DateInfo:
    type: object
    properties:
      issueEndHour:
        type: integer
        format: int32
        example: 16
        description: 발급 종료 시간
      issueEndYmdt:
        type: string
        format: date-time
        example: '2016-11-17'
        description: 발급 제한 일
      issueStartHour:
        type: integer
        format: int32
        example: 12
        description: 발급 시작 시간
      issueStartYmdt:
        type: string
        format: date-time
        example: '2016-11-17'
        description: 발급 시작 일
  DeliveryConditionForDisplay:
    type: object
    properties:
      aboveDeliveryAmt:
        type: number
        description: '조건부 배송비의 기준값(9,800원 미만 배송비 2,500원일때 aboveDeliveryAmt는 9800)'
      deliveryAmt:
        type: number
        example: 2500
        description: 배송비
      deliveryConditionType:
        type: string
        example: CONDITIONAL
        description: >-
          배송조건(FRES:무료배송,CONDITIONAL:조건부무료배송,FIXED_FEE:유료,QUANTITY_PROPOSITIONAL_FEE:수량비례,PRICE_FEE:금액별차등,QUANTITY_FEE:수량별차등)
        enum:
          - FREE
          - CONDITIONAL
          - FIXED_FEE
          - QUANTITY_PROPOSITIONAL_FEE
          - PRICE_FEE
          - QUANTITY_FEE
      groupDeliveryAmtType:
        type: string
        example: MAXIMUM_SELECTED
        description: '묶음배송조건(MAXIMUM_SELECTED:최대기준, MINIMUM_SELECTED:최소기준)'
        enum:
          - MAXIMUM_SELECTED
          - MINIMUM_SELECTED
      remoteDeliveryAmt:
        type: number
        example: 2500
        description: 추가배송비
  DeliveryFee:
    type: object
    properties:
      deliveryConditionType:
        type: string
        description: '배송비템플릿(무료, 조건부 무료, 유료(고정 배송비), 수량 비례, 금액별 차등, 수량별 차등)'
        enum:
          - FREE
          - CONDITIONAL
          - FIXED_FEE
          - QUANTITY_PROPOSITIONAL_FEE
          - PRICE_FEE
          - QUANTITY_FEE
      deliveryAmt:
        type: number
        description: '배송비 (고정배송비, 조건부 배송비인 경우)'
      aboveDeliveryAmt:
        type: number
        description: '조건부 배송비의 기준값(9,800원 이상인경우 배송비 2,500원일때 aboveDeliveryAmt는 9800'
      returnDeliveryAmt:
        type: number
        description: 반품배송비
      defaultDeliveryConditionLabel:
        type: string
        example: '배송비 2500원, 9800원 이상 무료 | 무료 | 배송비 2500원'
        description: 배송비템플릿 요약
      deliveryAmtLabels:
        type: array
        example: >-
          [ "배송비 5000원, 주문개수 0개 이상 ~ 5개 미만 ", "배송비 7500원, 주문개수 5개 이상 ~ 25개 미만 ",
          "배송비 10000원, 주문개수 25개 이상 ~" ]
        description: 구간 배송비인경우 배송비에대한 요약
        items:
          type: string
  DeliveryInfo:
    type: object
    properties:
      retrieveInvoiceUrl:
        type: string
        description: 송장추적 URL
      invoiceNo:
        type: string
        description: 송장번호
      deliveryCompanyType:
        type: string
        description: 택배사 타입
        enum:
          - CJ
          - POST
          - HANJIN
          - GTX
          - HYUNDAI
          - KGB
          - LOGEN
          - CJHBL
          - GSI
          - KGL
          - INTRAS
          - UPS
      deliveryCompanyTypeLabel:
        type: string
        description: 택배사명
  DiscountInfo:
    type: object
    properties:
      discountAmt:
        type: number
        example: 1000
        description: 쿠폰 할인액
      discountRate:
        type: number
        example: 0.1
        description: 쿠폰 할인율
      fixedAmt:
        type: boolean
        example: false
        description: 정액여부
      freeDelivery:
        type: boolean
        example: false
        description: 배송비 무료 여부(배송비쿠폰인경우)
      maxDiscountAmt:
        type: number
        example: 5000
        description: 최대 할인액
      skippedAccumulationAmt:
        type: boolean
        example: false
        description: 적립급 지금 불가 여부
      useOtherCoupon:
        type: boolean
        example: false
        description: 타 쿠폰과 함께 사용가능 여부
  EmailCertificationPostRequest:
    type: object
    required:
      - email
      - usage
    properties:
      email:
        type: string
        example: example001@gmail.com
        description: '이메일 주소 '
      memberName:
        type: string
        example: example100 or example001@email.com
        description: 회원 이름
      usage:
        type: string
        description: 사용 용도
        enum:
          - FIND_ID
          - FIND_PASSWORD
          - RELEASE_DORMANT
          - ADMIN
          - JOIN
  ErrorCode:
    type: object
    properties:
      code:
        type: string
      simpleCode:
        type: string
  EventCoupon:
    type: object
    properties:
      couponNo:
        type: integer
        format: int32
        description: 쿠폰번호
      issuedCnt:
        type: integer
        format: int32
        description: 발행 수량
      startYmdt:
        type: string
        format: date-time
        description: 발행 시작일
      endYmdt:
        type: string
        format: date-time
        description: 발행 종료일
      imageUrl:
        type: string
        description: 이미지 URL
  EventResponse:
    type: object
    properties:
      orders:
        type: array
        description: '섹션(상품( 정보, 쿠폰, 상단 노출 정보 정렬순서(배열 순서대로 프론트에서 노출, 몰마다 정책이 다를수 있음)'
        items:
          type: string
          enum:
            - TOP
            - SECTIONS
            - COUPONS
      eventNo:
        type: integer
        format: int32
        description: 기획전 번호
      label:
        type: string
        description: 기획전 명
      url:
        type: string
        description: 기획전 URL
      urlType:
        type: string
        description: 'URL 타입(기획전 번호 사용, URL 직접입력)'
        enum:
          - EVENT_NUMBER
          - DIRECT
      startYmdt:
        type: string
        format: date-time
        description: 전시 시작일
      endYmdt:
        type: string
        format: date-time
        description: 전시 종료일
      pcImageUrl:
        type: string
        description: 기획전 이미지 URL(PC)
      mobileimageUrl:
        type: string
        description: 기획전 이미지 URL(MOBILE)
      tag:
        type: string
        description: 검색용 태그값
      categoryNos:
        type: array
        description: 카테고리 번호(배열)
        items:
          type: integer
          format: int32
      section:
        type: array
        description: 섹션(상품)
        items:
          $ref: '#/definitions/Section'
      coupon:
        description: 쿠폰 정보
        $ref: '#/definitions/Coupon'
      top:
        description: 상단 노출 정보
        $ref: '#/definitions/Top'
  ExchangeProductOption:
    type: object
    properties:
      additionalProductNo:
        type: integer
        format: int32
        description: 교환상품의 추가상품 번호
      inputTexts:
        type: array
        description: 입력값들
        items:
          $ref: '#/definitions/OrderProductOptionInputRequest'
      optionNo:
        type: integer
        format: int32
        description: 교환상품의 선택된 몰 옵션번호
      orderCnt:
        type: integer
        format: int32
        description: 교환상품수량
      productNo:
        type: integer
        format: int32
        description: 교환상품의 몰상품번호
  FileUploadResult:
    type: object
    properties:
      originalFileName:
        type: string
        example: filename.txt
        description: 파일이름
      success:
        type: boolean
        example: true
        description: 성공여부
      uploadedFileName:
        type: string
        example: 1496653899647_filename.txt
        description: 실제 파일 이름
    description: 파일 업로드 결과
  FlatCategory:
    type: object
    required:
      - depth1DisplayOrder
      - depth2DisplayOrder
      - depth3DisplayOrder
      - depth4DisplayOrder
      - depth5DisplayOrder
    properties:
      depth1CategoryNo:
        type: integer
        format: int32
        description: 카테고리 번호(1뎁스)
      depth1Label:
        type: string
        description: 카테고리 명(1뎁스)
      depth1DisplayOrder:
        type: integer
        format: int32
        description: 순서
      depth1Icon:
        type: string
        description: 아이콘(1뎁스)
      depth1Content:
        type: string
        description: 카테고리 상세 HTML(1뎁스)
      depth2CategoryNo:
        type: integer
        format: int32
        description: 카테고리 번호(2뎁스)
      depth2Label:
        type: string
        description: 카테고리 명(2뎁스)
      depth2DisplayOrder:
        type: integer
        format: int32
        description: 순서
      depth2Icon:
        type: string
        description: 아이콘(2뎁스)
      depth2Content:
        type: string
        description: 카테고리 상세 HTML(2뎁스)
      depth3CategoryNo:
        type: integer
        format: int32
        description: 카테고리 번호(3뎁스)
      depth3Label:
        type: string
        description: 카테고리 명(3뎁스)
      depth3DisplayOrder:
        type: integer
        format: int32
        description: 순서
      depth3Icon:
        type: string
        description: 아이콘(3뎁스)
      depth3Content:
        type: string
        description: 카테고리 상세 HTML(3뎁스)
      depth4CategoryNo:
        type: integer
        format: int32
        description: 카테고리 번호(4뎁스)
      depth4Label:
        type: string
        description: 카테고리 명(4뎁스)
      depth4DisplayOrder:
        type: integer
        format: int32
        description: 순서
      depth4Icon:
        type: string
        description: 아이콘(4뎁스)
      depth4Content:
        type: string
        description: 카테고리 상세 HTML(4뎁스)
      depth5CategoryNo:
        type: integer
        format: int32
        description: 카테고리 번호(5뎁스)
      depth5Label:
        type: string
        description: 카테고리 명(5뎁스)
      depth5DisplayOrder:
        type: integer
        format: int32
        description: 순서
      depth5Icon:
        type: string
        description: 아이콘(5뎁스)
      depth5Content:
        type: string
        description: 카테고리 상세 HTML(5뎁스)
      fullCategoryName:
        type: string
        description: 1~5뎁스 카테고리 명
  ForeignPartner:
    type: object
    required:
      - countryCd
      - partnerName
      - privacyManagerName
      - privacyManagerPhoneNo
    properties:
      partnerName:
        type: string
        description: 파트너명
      countryCd:
        type: string
        description: 국가코드
        enum:
          - AX
          - AD
          - AU
          - AT
          - BH
          - BE
          - BZ
          - BR
          - BN
          - BG
          - CA
          - E2
          - CL
          - CN
          - CO
          - CR
          - CY
          - CZ
          - DK
          - EC
          - EG
          - SV
          - EE
          - FR
          - GF
          - DE
          - GR
          - GL
          - GU
          - GT
          - GG
          - GY
          - HK
          - HU
          - IS
          - ID
          - IE
          - IL
          - IT
          - JP
          - JE
          - JO
          - KR
          - KW
          - LV
          - LB
          - LI
          - LT
          - LU
          - MO
          - P2
          - MY
          - NL
          - NZ
          - G2
          - 'NO'
          - PY
          - PE
          - PL
          - PT
          - RO
          - RU
          - SM
          - SA
          - G3
          - SG
          - SK
          - SI
          - ES
          - CH
          - TW
          - TH
          - TR
          - AE
          - GB
          - US
          - U2
          - UY
          - VD
          - G4
          - YD
      privacyManagerName:
        type: string
        description: 개인정보관리책임자 이름
      privacyManagerPhoneNo:
        type: string
        description: 개인정보관리책임자 연락처
  GuestOrderRequest:
    type: object
    required:
      - orderRequestType
      - password
    properties:
      orderRequestType:
        type: string
        example: ALL
        description: 주문옵션타입
        enum:
          - All
          - NORMAL
          - CLAIM
      password:
        type: string
        example: abc$%^987
        description: 비밀번호
  ImageInfo:
    type: object
    properties:
      url:
        type: string
        description: 상단 이미지 URL
      type:
        type: string
        description: '타입(HTML, FILE)'
  InputOption:
    type: object
    properties:
      inputNo:
        type: integer
        format: int32
        description: 구매자작성형 번호
      inputText:
        type: string
        description: 구매자작성형 텍스트 내용
      inputMatchingType:
        type: string
        description: '구매자작성형 매칭타입(옵션별, 상품별)'
        enum:
          - OPTION
          - PRODUCT
  InquiriesResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/InquiryResponse'
      totalCount:
        type: integer
        format: int64
  InquiryAddRequest:
    type: object
    required:
      - inquiryContent
      - inquiryTitle
      - inquiryTypeNo
    properties:
      answerEmailSendYn:
        type: boolean
        example: false
        description: '1:1 문의 답변 등록시, e메일 발송여부'
      answerSmsSendYn:
        type: boolean
        example: false
        description: '1:1 문의 답변 등록시, SMS 발송여부'
      email:
        type: string
        example: example@email.com
        description: email 주소. 비회원 등록시에만 사용
      inquiryContent:
        type: string
        example: Inquiry Content
        description: '1:1 문의 내용'
      inquiryTitle:
        type: string
        example: title
        description: '1:1 문의 제목'
      inquiryTypeNo:
        type: integer
        format: int32
        example: 59
        description: '1:1 문의 유형 번호'
      orderNo:
        type: string
        example: '10203040'
        description: '1:1 문의 관련 주문번호'
      originalFileName:
        type: string
        example: filename.txt
        description: 업로드한 파일명
      productNo:
        type: integer
        format: int32
        example: 1020
        description: '1:1 문의 관련 상품번호'
      uploadedFileName:
        type: string
        example: 1484456934288_filename.txt
        description: 서버에 저장된 파일명
  InquiryAnswer:
    type: object
    properties:
      inquiryNo:
        type: integer
        format: int32
        description: 상품문의 번호
      title:
        type: string
        description: 상품문의 제목(선택)
      content:
        type: string
        description: 상품문의 내용
      administrator:
        type: boolean
        example: false
        description: 관리자 여부
      secreted:
        type: boolean
        example: false
        description: 비밀글 여부
      memberId:
        type: string
        description: 등록 아이디
      adminType:
        type: string
        description: '관리자 구분: 쇼핑몰운영자(SERVICE), 파트너(판매처, PARTNER)'
        enum:
          - PLATFORM
          - SERVICE
          - PARTNER
      partnerName:
        type: string
        description: '파트너(판매처) 명, 쇼핑몰운영자일 경우 공백'
      nickName:
        type: string
        description: 닉네임
      registerYmdt:
        type: string
        format: date-time
        description: 최초등록일
      updateYmdt:
        type: string
        format: date-time
        description: 최종수정일
  InquiryAnswerResponse:
    type: object
    properties:
      answerContent:
        type: string
        description: '답변 내용 '
      answerRegisterYmdt:
        type: string
        format: date-time
        description: 답변 일자
  InquiryKeyResponse:
    type: object
    required:
      - inquiryNo
    properties:
      inquiryNo:
        type: integer
        format: int32
        description: '1:1 문의 번호'
  InquiryResponse:
    type: object
    required:
      - answer
      - inquiryContent
      - inquiryNo
      - inquiryStatus
      - inquiryTitle
      - orderNo
      - productName
      - productNo
      - registerYmdt
    properties:
      inquiryNo:
        type: integer
        format: int32
        description: 등록일
      orderNo:
        type: string
        description: 주문번호
      productNo:
        type: integer
        format: int32
        description: 상품번호
      productName:
        type: string
        description: 상품명
      inquiryTitle:
        type: string
        description: 문의 제목
      inquiryContent:
        type: string
        description: 문의 내용
      registerYmdt:
        type: string
        format: date-time
        description: 등록일
      inquiryStatus:
        type: string
        description: '답변 상태 '
        enum:
          - ASKED
          - ANSWERED
          - IN_PROGRESS
      answer:
        description: '답변 '
        $ref: '#/definitions/InquiryAnswerResponse'
  Insurance:
    type: object
    properties:
      'no':
        type: string
        description: 보증보험 번호
      url:
        type: string
        description: 보증보험URL
  InsuranceRequest:
    type: object
    properties:
      agreementEmail:
        type: boolean
        example: false
        description: 이메일 수신동의
      agreementSMS:
        type: boolean
        example: false
        description: SMS 수신동의
      birthYmd:
        type: string
        example: '2017-02-01'
        description: 출생연월
      insuranceType:
        type: string
        example: USAFE
        description: 보험타입
        enum:
          - USAFE
      sex:
        type: string
        example: MALE
        description: 성별
        enum:
          - MALE
          - FEMALE
  IssuableCouponResponse:
    type: object
    properties:
      allianceRefererType:
        type: string
        example: DIRECT
        description: 제휴 방문처 타입
        enum:
          - DIRECT
          - NAVER_KNOWLEDGE_SHOPPING
      constraint:
        description: 제약조건
        $ref: '#/definitions/Constraint'
      couponName:
        type: string
        example: NCP 오픈기념 쿠폰
        description: 쿠폰 이름
      couponNo:
        type: integer
        format: int32
        example: 1
        description: 쿠폰 번호
      couponTargetType:
        type: string
        example: ALL_PRODUCT
        description: 쿠폰 대상 종류
        enum:
          - ALL_PRODUCT
          - PRODUCT
          - BRAND
          - CATEGORY
          - PARTNER
          - EVENT
      couponType:
        type: string
        example: PRODUCT
        description: 쿠폰 종류
        enum:
          - PRODUCT
          - PRODUCT_PLUS
          - CART
          - CART_DELIVERY
      dateInfo:
        description: 발행정보
        $ref: '#/definitions/DateInfo'
      discountInfo:
        description: 할인정보
        $ref: '#/definitions/DiscountInfo'
  KcpCertificationResult:
    type: object
    properties:
      birthDay:
        type: string
      ci:
        type: string
      ciUrlEncoded:
        type: string
      commId:
        type: string
      di:
        type: string
      diUrlEncoded:
        type: string
      localCode:
        type: string
      phoneNo:
        type: string
      responseCode:
        type: string
      responseMessage:
        type: string
      sex:
        type: string
      userName:
        type: string
      webSiteId:
        type: string
  KcpConfirmRequest:
    type: object
    required:
      - orderSheetNo
      - payType
      - pgType
    properties:
      cashTrCode:
        type: string
        description: KCP 현금영수증 선택시 식별 코드
      cashYn:
        type: string
        description: KCP 현금영수증 선택여부
      encrypted:
        type: string
        description: PG사에서 전달한 인증결과 암호화 데이터
      kcpPayType:
        type: string
        description: KCP 결제수단
      orderSheetNo:
        type: string
        description: 임시주문번호
      payMethod:
        type: string
        description: KCP결제창에 노출되었던 결제수단들
      payType:
        type: string
        example: PAYCO
        description: 결제 타입
        enum:
          - CREDIT_CARD
          - EASY_ACCOUNT
          - MOBILE
          - REALTIME_ACCOUNT_TRANSFER
          - VIRTUAL_ACCOUNT
          - GIFT
          - ATM
          - PAYCO
          - ZERO_PAY
          - ACCUMULATION
          - ACCOUNT
          - PHONE_BILL
          - POINT
          - YPAY
          - KPAY
          - PAYPIN
          - INIPAY
          - PAYPAL
          - STRIPE
          - ETC
      paymentCertifyToken:
        type: string
        description: PG사에서 전달한 결제 토큰
      pgType:
        type: string
        example: PAYCO
        description: 결제 타입
        enum:
          - PAYCO
          - PAYPAL
          - STRIPE
          - KCP
          - INICIS
          - NONE
          - KCP_MOBILE
          - KCP_APP
      resultCode:
        type: string
        description: PG사에서 전달한 상태코드 값
      usePayMethod:
        type: string
        description: KCP결제창에 노출되었던 결제수단들
  KcpConfirmResponse:
    type: object
    properties:
      account:
        type: string
        description: 가상계좌 계좌번호
      amount:
        type: string
        description: 결제 금액
      appNo:
        type: string
        description: 신용카드 결제건 승인번호
      appTime:
        type: string
        description: '가상계좌, 신용카드 결제(승인) 시간'
      bank:
        type: string
        description: 계좌이체 은행 코드
        enum:
          - KDB
          - IBK
          - KB
          - KEB
          - SUHYUP
          - NH
          - WOORI
          - SC
          - CITY
          - KFCC
          - CU
          - EPOST
          - HANA
          - SHINHAN
          - DAEGU
          - PUSAN
          - GWANGJU
          - JEJU
          - JEONBUK
          - GYEONGNAM
          - SANGHO
          - HSBC
          - DEUTSCHE
          - NFCF
          - KBANK
          - YUANTA
          - HYUNDAI
          - MIRAE
          - DAEWOO
          - SAMSUNG
          - HANKOOK
          - WOORI_INVEST
          - KYOBO
          - HI_INVEST
          - HMC_INVEST
          - KIWOOM
          - ETRADE
          - SK
          - DAISHIN
          - SOLOMON_INVEST
          - HANHWA
          - HANA_INVEST
          - SHINHAN_INVEST
          - DONGBU
          - EUGENE_INVEST
          - MERITZ_COMPREHENSIVE
          - NH_INVEST
          - BOOKOOK
          - SHINYOUNG
          - LIG_INVEST
      bankName:
        type: string
        description: 계좌이체 은행명
      cardCode:
        type: string
        description: 카드사 코드
      cardName:
        type: string
        description: 카드사명
      cashReceiptNo:
        type: string
        description: 현금영수증 번호
      mobileAppTime:
        type: string
        description: 가상계좌 계좌번호
      mobileCompanyCode:
        type: string
        description: 휴대폰 결제 통신사 코드
      mobileNo:
        type: string
        description: 휴대폰 번호
      noinf:
        type: string
        description: 신용카드 결제건의 무이자여부
      orderNo:
        type: string
        description: 주문 번호
      partialCancelYn:
        type: string
        description: 신용카드 부분취소 가능 여부
      payType:
        type: string
        description: 결제수단
        enum:
          - CREDIT_CARD
          - EASY_ACCOUNT
          - MOBILE
          - REALTIME_ACCOUNT_TRANSFER
          - VIRTUAL_ACCOUNT
          - GIFT
          - ATM
          - PAYCO
          - ZERO_PAY
          - ACCUMULATION
          - ACCOUNT
          - PHONE_BILL
          - POINT
          - YPAY
          - KPAY
          - PAYPIN
          - INIPAY
          - PAYPAL
          - STRIPE
          - ETC
      payTypeLabel:
        type: string
      pgOrderNo:
        type: string
        description: KCP 주문 번호
      pgType:
        type: string
        description: 결제 PG
        enum:
          - PAYCO
          - PAYPAL
          - STRIPE
          - KCP
          - INICIS
          - NONE
          - KCP_MOBILE
          - KCP_APP
      pointIssue:
        type: string
        description: 포인트 결제 건의 결제사 코드 (필요한가?)
      quota:
        type: string
        description: 신용카드 결제건의 할부 기간
      vaDate:
        type: string
        description: 가상계좌 입금 마감일
      vendorCode:
        type: string
        description: 휴대폰 결제건의 결제사 코드
  KcpMemberCertificationApiRequest:
    type: object
    required:
      - returnUrl
    properties:
      returnUrl:
        type: string
        description: 요청결과를 전달받는 화면 URL
  KcpMemberCertificationTransferForm:
    type: object
    required:
      - form
    properties:
      form:
        type: string
        description: KCP와 통신하기위한 form
  KcpMobileReserveResponse:
    type: object
    properties:
      approvalKey:
        type: string
        description: KCP 결제창을 호출하기 위한 키값
      goodName:
        type: string
        description: 상품이름
      orderNo:
        type: string
        description: NCP 주문번호
      payAmount:
        type: string
        description: 결제 금액
      payMethod:
        type: string
        description: KCP용 결제수단 문자열
      siteCd:
        type: string
        description: KCP 결제창 호출을 위한 사이트 코드값
      successUrl:
        type: string
        description: KCP 결제창에서 성공시 돌아갈 url
      traceNo:
        type: string
        description: KCP 주문번호
  KcpVirtualAccountNotification:
    type: object
    properties:
      account:
        type: string
      bank_code:
        type: string
      cash_a_no:
        type: string
      ipgm_mnyx:
        type: string
      ipgm_name:
        type: string
      ipgm_time:
        type: string
      noti_id:
        type: string
      op_cd:
        type: string
      order_no:
        type: string
      remitter:
        type: string
      result:
        type: string
      tno:
        type: string
      tx_cd:
        type: string
      tx_tm:
        type: string
  Limit:
    type: object
    properties:
      minBuyCnt:
        type: integer
        format: int32
        description: 최소구매수량
      maxBuyPersonCnt:
        type: integer
        format: int32
        description: 1인최대구매수량
      maxBuyTimeCnt:
        type: integer
        format: int32
        description: 1회최대구매수량
      maxBuyDays:
        type: integer
        format: int32
        description: 최대구매기간(일)
      maxBuyPeriodCnt:
        type: integer
        format: int32
        description: 최대구매기간(수량)
  LoginUrlResponse:
    type: object
    properties:
      loginUrl:
        type: string
      sessionKey:
        type: string
  MemberCertRequest:
    type: object
    required:
      - certificationServiceCode
    properties:
      birthday:
        type: string
        example: '19820407'
        description: 생년월일
        pattern: '^\d{8}$'
      certificationServiceCode:
        type: string
        example: NHNKCP/NICE
        description: 인증업체 코드
        enum:
          - NHNKCP
          - NICE
      memberCi:
        type: string
        description: 본인인증 후 발급되는 CI 정보
      memberName:
        type: string
        description: 회원 이름
        minLength: 2
        maxLength: 10
      mobileNo:
        type: string
        example: 010-3394-5688
        description: 핸드폰 번호
        pattern: '^\d{3}-\d{3,4}-\d{4}$'
      sex:
        type: string
        example: M
        description: 성별 (F/M)
        pattern: '^[FM]$'
  MemberExistResponse:
    type: object
    required:
      - exist
    properties:
      exist:
        type: boolean
        example: false
        description: 등록여부
  MemberIdResponse:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        example: example / exam***
        description: 아이디
  MemberJoinRequest:
    type: object
    required:
      - memberId
      - password
    properties:
      address:
        type: string
        example: 성남시 분당구 대왕판교로 15
        description: 도로명 주소
      birthday:
        type: string
        example: '19820407'
        description: 생년월일
      countryCd:
        type: string
        example: KR
        description: 회원 국적
        enum:
          - AX
          - AD
          - AU
          - AT
          - BH
          - BE
          - BZ
          - BR
          - BN
          - BG
          - CA
          - E2
          - CL
          - CN
          - CO
          - CR
          - CY
          - CZ
          - DK
          - EC
          - EG
          - SV
          - EE
          - FR
          - GF
          - DE
          - GR
          - GL
          - GU
          - GT
          - GG
          - GY
          - HK
          - HU
          - IS
          - ID
          - IE
          - IL
          - IT
          - JP
          - JE
          - JO
          - KR
          - KW
          - LV
          - LB
          - LI
          - LT
          - LU
          - MO
          - P2
          - MY
          - NL
          - NZ
          - G2
          - 'NO'
          - PY
          - PE
          - PL
          - PT
          - RO
          - RU
          - SM
          - SA
          - G3
          - SG
          - SK
          - SI
          - ES
          - CH
          - TW
          - TH
          - TR
          - AE
          - GB
          - US
          - U2
          - UY
          - VD
          - G4
          - YD
      detailAddress:
        type: string
        example: NHN 플레이뮤지엄
        description: 도로명 주소 상세
      directMailAgreed:
        type: boolean
        example: false
        description: 이메일 알림 동의 여부
      email:
        type: string
        example: abc1234@abc.com
        description: 이메일 주소
      firstName:
        type: string
        description: 회원 이름
      jibunAddress:
        type: string
        example: 성남시 분당구 상폄동
        description: 지번 주소
      jibunDetailAddress:
        type: string
        example: 629 NHN 플레이뮤지엄
        description: 지번 주소 상세
      joinType:
        type: string
        example: PC
        description: 가입 경로
        enum:
          - PC
          - MOBILEWEB
          - MOBILE
      lastName:
        type: string
        description: 회원 성
      mobileNo:
        type: string
        example: 010-1010-1010
        description: 휴대전화 번호
      nickname:
        type: string
        example: 닉네임
        description: 닉네임
      pushNotificationAgreed:
        type: boolean
        example: false
        description: 푸시 알림 동의 여부
      sex:
        type: string
        example: M
        description: 성별 (F/M)
      smsAgreed:
        type: boolean
        example: false
        description: SMS 알림 동의 여부
      zipCd:
        type: string
        example: '13487'
        description: 우편번호
      memberId:
        type: string
        example: test01
        description: 회원 아이디
        minLength: 1
        maxLength: 40
        pattern: '^[a-zA-Z0-9@\._\-]{1,40}$'
      password:
        type: string
        example: 'nhn!@#123'
        description: 비밀번호
        pattern: '^[a-zA-Z0-9!@#$%^&+=\-_\.\(\)\\]{8,20}$'
      memberName:
        type: string
        example: 김엔터
        description: 회원 이름
      ci:
        type: string
        description: 본인인증 후 가입시 필요한 식별 번호
      certificatedNumber:
        type: string
        description: SMS 인증번호
  MemberUpdateRequest:
    type: object
    properties:
      address:
        type: string
        description: 도로명 주소
      certificatedNumber:
        type: string
        description: SMS 인증번호
      detailAddress:
        type: string
        description: 도로명 주소 상세
      directMailAgreed:
        type: boolean
        example: false
        description: 이메일 알림 동의 여부
      email:
        type: string
        example: abc1234@abc.com
        description: 이메일 주소
      jibunAddress:
        type: string
        description: 도로명 주소 (지번 주소)
      jibunDetailAddress:
        type: string
        description: 도로명 주소 상세 (지번 주소)
      mobileNo:
        type: string
        example: 010-3394-5688
        description: 핸드폰 번호
      nickname:
        type: string
        description: 닉네임
      password:
        type: string
        description: 비밀번호
        pattern: '^[a-zA-Z0-9!@#$%^&+=\-_\.\(\)\\]{8,20}$'
      pushNotificationAgreed:
        type: boolean
        example: false
        description: 푸시 알림 동의 여부
      smsAgreed:
        type: boolean
        example: false
        description: SMS 알림 동의 여부
      zipCd:
        type: string
        description: 우편번호
  MultiLevelCategory:
    type: object
    required:
      - categoryNo
      - depth
      - label
    properties:
      categoryNo:
        type: integer
        format: int32
        description: 카테고리 번호
      label:
        type: string
        description: 카테고리 명
      depth:
        type: integer
        format: int32
        description: 뎁스
      icon:
        type: string
        description: 아이콘
      content:
        type: string
        description: 카테고리 상세(HTML)
      children:
        type: array
        description: 자식 카테고리
        items:
          $ref: '#/definitions/MultiLevelCategory'
  MyCouponApiResponse:
    type: object
    properties:
      couponIssueNo:
        type: integer
        format: int64
        description: 쿠폰 발급 번호
      couponName:
        type: string
        description: 쿠폰 명
      couponNo:
        type: integer
        format: int32
        description: 쿠폰 번호
      couponType:
        type: string
        description: 쿠폰 유형(상품 / 상품플러스 / 장바구니 / 배송비
        enum:
          - PRODUCT
          - PRODUCT_PLUS
          - CART
          - CART_DELIVERY
      discountAmt:
        type: number
        description: 할인금액
      discountRate:
        type: number
        description: 할인율
      fiexdAmt:
        type: boolean
        example: false
        description: 정액 여부(N일경우 정률)
      freeDelivery:
        type: boolean
        example: false
        description: 배송비무료여부
      maxDiscountAmt:
        type: number
        description: 최대할인금액(정률에서)
      maxSalePrice:
        type: number
        description: 최대판매금액기준
      minDeliveryAmt:
        type: number
        description: 배송비쿠폰일경우 최소 배송비
      minSalePrice:
        type: number
        description: 최소판매금액기준
      useEndYmdt:
        type: string
        format: date-time
        description: 사용종료일
      useYmdt:
        type: string
        format: date-time
        description: 사용일
      used:
        type: boolean
        example: false
        description: 사용여부
  MyCouponsApiResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/MyCouponApiResponse'
      totalCount:
        type: integer
        format: int64
  MyOrderResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/UserOrder'
      totalCount:
        type: integer
        format: int64
    description: 주문내역 응답
  MyReviewsResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/ReviewResponse'
      totalCount:
        type: integer
        format: int64
  NextAction:
    type: object
    properties:
      nextActionType:
        type: string
        enum:
          - CALCEL_ALL
          - CANCEL
          - EXCHANGE
          - RETURN
          - WITHDRAW_CANCEL
          - WITHDRAW_EXCHANGE
          - WITHDRAW_RETURN
          - VIEW_CLAIM
          - VIEW_DELIVERY
          - CONFIRM_ORDER
          - CHANGE_ADDRESS
          - WRITE_REVIEW
      uri:
        type: string
  NoAuthenticationPasswordCertificationRequest:
    type: object
    required:
      - certificationServiceCode
      - ci
      - memberId
      - newPassword
    properties:
      certificationServiceCode:
        type: string
        example: NHNKCP/NICE
        description: 인증업체 코드
        enum:
          - NHNKCP
          - NICE
      ci:
        type: string
        example: nhn1e2n3t==
        description: CI
      memberId:
        type: string
        example: abc987
        description: 변경대상 아이디
        pattern: '^[a-zA-Z0-9@\._\-]{1,40}$'
      mobileNo:
        type: string
        example: 010-1234-1234
        description: 핸드폰 번호
        pattern: '^\d{3}-\d{3,4}-\d{4}$'
      newPassword:
        type: string
        example: abc$%^987
        description: 변경할 비밀번호
        pattern: '^[a-zA-Z0-9!@#$%^&+=\-_\.\(\)\\]{8,20}$'
  NoAuthenticationPasswordEmailRequest:
    type: object
    required:
      - certificationNumber
      - memberId
      - newPassword
    properties:
      certificationNumber:
        type: string
        example: '111222 '
        description: 인증번호
      memberId:
        type: string
        example: memberid
        description: 변경대상 아이디
      newPassword:
        type: string
        example: abc$%^987
        description: 변경할 비밀번호
        pattern: '^[a-zA-Z0-9!@#$%^&+=\-_\.\(\)\\]{8,20}$'
  NoAuthenticationPasswordSmsRequest:
    type: object
    required:
      - certificationNumber
      - memberId
      - newPassword
    properties:
      certificationNumber:
        type: string
        example: '123456'
        description: 인증번호
        pattern: '^[0-9]*$'
      memberId:
        type: string
        example: abc987
        description: 변경대상 아이디
        pattern: '^[a-zA-Z0-9@\._\-]{1,40}$'
      newPassword:
        type: string
        example: abc$%^987
        description: 변경할 비밀번호
        pattern: '^[a-zA-Z0-9!@#$%^&+=\-_\.\(\)\\]{8,20}$'
  OpenAccessTokenResponse:
    type: object
    properties:
      accessToken:
        type: string
        description: Access Token
      expireYmdt:
        type: string
        format: date-time
        description: 만료시간
      refreshToken:
        type: string
        description: Refresh Token
  OpenIdJoinRequest:
    type: object
    properties:
      address:
        type: string
        example: 성남시 분당구 대왕판교로 15
        description: 도로명 주소
      birthday:
        type: string
        example: '19820407'
        description: 생년월일
      detailAddress:
        type: string
        example: NHN 플레이뮤지엄
        description: 도로명 주소 상세
      directMailAgreed:
        type: boolean
        example: false
        description: 이메일 알림 동의 여부
      email:
        type: string
        example: abc1234@abc.com
        description: 이메일 주소
      jibunAddress:
        type: string
        example: 성남시 분당구 상폄동
        description: 지번 주소
      jibunDetailAddress:
        type: string
        example: 629 NHN 플레이뮤지엄
        description: 지번 주소 상세
      joinType:
        type: string
        example: PC
        description: 가입 경로
        enum:
          - PC
          - MOBILEWEB
          - MOBILE
      mobileNo:
        type: string
        example: 010-1010-1010
        description: 휴대전화 번호
      nickname:
        type: string
        example: 닉네임
        description: 닉네임
      pushNotificationAgreed:
        type: boolean
        example: false
        description: 푸시 알림 동의 여부
      sex:
        type: string
        example: M
        description: 성별 (F/M)
      smsAgreed:
        type: boolean
        example: false
        description: SMS 알림 동의 여부
      zipCd:
        type: string
        example: '13487'
        description: 우편번호
  Option:
    type: object
    required:
      - addPrice
      - label
      - main
      - optionNo
      - saleType
      - stockCnt
      - value
    properties:
      label:
        type: string
        description: 옵션명
      value:
        type: string
        description: 옵션값
      addPrice:
        type: number
        description: 추가금액
      saleCnt:
        type: integer
        format: int32
        description: 판매수량
      stockCnt:
        type: integer
        format: int32
        description: 재고수량
      saleType:
        type: string
        description: '판매타입(판매가능, 품절)'
        enum:
          - AVAILABLE
          - SOLDOUT
      main:
        type: boolean
        example: false
        description: 대표 옵션 여부
      images:
        type: array
        description: 옵션 이미지 목록
        items:
          $ref: '#/definitions/OptionImage'
      optionNo:
        type: integer
        format: int32
        description: 옵션번호
      children:
        type: array
        description: 자식 옵션 목록
        items:
          $ref: '#/definitions/Option'
  OptionImage:
    type: object
    properties:
      url:
        type: string
        description: 이미지 URL
      main:
        type: boolean
        example: false
        description: 메인이미지 여부
  OptionPrice:
    type: object
    properties:
      salePrice:
        type: number
        description: 상품판매가
      addPrice:
        type: number
        description: 옵션가격(추가금액)
      immediateDiscountAmt:
        type: number
        description: 즉시할인금액
      additionalDiscountAmt:
        type: number
        description: 추가할인금액
      standardAmt:
        type: number
        description: 정상금액(상품판매가 + 옵션추가금액) * 주문수량
      buyAmt:
        type: number
        description: 구매금액(구매가 * 주문수량)
  OptionResponse:
    type: object
    required:
      - flatOptions
      - labels
      - multiLevelOptions
      - type
    properties:
      type:
        type: string
        description: '옵션 타입(단독형, 조합형, 기본생성)'
        enum:
          - STANDARD
          - COMBINATION
          - DEFAULT
      labels:
        type: array
        description: 옵션명 목록
        items:
          type: string
      multiLevelOptions:
        type: array
        description: 옵션 목록(계층)
        items:
          $ref: '#/definitions/Option'
      flatOptions:
        type: array
        description: 옵션 목록
        items:
          $ref: '#/definitions/Option'
      inputs:
        type: array
        description: 구매자 작성형
        items:
          $ref: '#/definitions/InputOption'
      additionalProducts:
        type: array
        description: 추가상품 목록
        items:
          $ref: '#/definitions/AdditionalProduct'
  OrderAdditionalProduct:
    type: object
    properties:
      validInfo:
        description: 유효성 정보
        $ref: '#/definitions/OrderProductOptionValidInfo'
      additionalProductName:
        type: string
        description: 옵션명
      additionalProductValue:
        type: string
        description: 옵션값
      orderCnt:
        type: integer
        format: int32
        description: 주문수량
      salePrice:
        type: number
        description: 상품판매가
      productNo:
        type: integer
        format: int32
        description: 상품번호
      additionalProductNo:
        type: integer
        format: int32
        description: 추가상품번호
      standardAmt:
        type: number
        description: 정상금액(상품판매가 + 옵션추가금액) * 주문수량
      buyAmt:
        type: number
        description: 구매금액(구매가 * 주문수량)
      optionInputs:
        type: array
        description: 소비자 입력형 옵션
        items:
          $ref: '#/definitions/OrderProductOptionInputRequest'
  OrderAmount:
    type: object
    properties:
      additionalDiscountAmt:
        type: number
        description: 총 추가할인 금액
      deliveryAmt:
        type: number
        description: 총 배송비
      deliveryCouponDiscountAmt:
        type: number
        description: 배송비쿠폰 할인 금액
      immediateDiscountAmt:
        type: number
        description: 총 즉시할인 금액
      orderCouponDiscountAmt:
        type: number
        description: 주문쿠폰할인 금액
      payAmt:
        type: number
        description: 결제금액
      productCouponDiscountAmt:
        type: number
        description: 총 상품쿠폰할인 금액
      remoteDeliveryAmt:
        type: number
        description: 총 지역추가배송비
      standardAmt:
        type: number
        description: '총 상품정상금액(즉시할인, 추가할인 제외)'
      subPayAmt:
        type: number
        description: 보조결제금액(적립금)
      totalProductAmt:
        type: number
        description: >-
          최초 총 상품금액(firstStandardAmt - firstImmediateDiscountAmt -
          firstAdditionalDiscountAmt)
  OrderCountAndAmount:
    type: object
    properties:
      lastAdditionalDiscountAmt:
        type: number
        description: 최종추가할인금액
      lastDeliveryAmt:
        type: number
        description: 최종배송금액
      lastDeliveryCouponDiscountAmt:
        type: number
        description: 최종배송쿠폰할인금액
      lastImmediateDiscountAmt:
        type: number
        description: 최종즉실할인금액
      lastOrderCouponDiscountAmt:
        type: number
        description: 최종주문쿠폰할인금액
      lastPayAmt:
        type: number
        description: 최종결제금액
      lastProductCouponDiscountAmt:
        type: number
        description: 최종상품쿠폰할인금액
      lastRemoteDeliveryAmt:
        type: number
        description: 최종지역별추가배송금액
      lastStandardAmt:
        type: number
        description: 최종상품금액(할인제외)
      lastSubPayAmt:
        type: number
        description: 최종보조결제금액
      orderCnt:
        type: integer
        format: int32
        description: 주문수량
    description: 주문 수량 및 금액
  OrderCountByStatus:
    type: object
    properties:
      buyConfirmCnt:
        type: integer
        format: int32
        description: 구매확정수
      cancelDoneCnt:
        type: integer
        format: int32
        description: 취소완료수
      cancelProcessingCnt:
        type: integer
        format: int32
        description: 취소 진행중 수
      deliveryDoneCnt:
        type: integer
        format: int32
        description: 배송완료수
      deliveryIngCnt:
        type: integer
        format: int32
        description: 배송중수
      deliveryPerpareCnt:
        type: integer
        format: int32
        description: 배송준비중수
      depositWaitCnt:
        type: integer
        format: int32
        description: 입금대기수
      exchangeDoneCnt:
        type: integer
        format: int32
        description: 교환완료수
      exchangeProcessingCnt:
        type: integer
        format: int32
        description: 교환 진행중 수
      payDoneCnt:
        type: integer
        format: int32
        description: 결제완료수
      productPrepareCnt:
        type: integer
        format: int32
        description: 상품준비중수
      returnDoneCnt:
        type: integer
        format: int32
        description: 반품완료수
      returnProcessingCnt:
        type: integer
        format: int32
        description: 반품 진행중 수
    description: 상태별 주문 수량
  OrderPaymentRequest:
    type: object
    required:
      - clientReturnUrl
      - member
      - orderSheetNo
      - orderer
      - pgType
      - saveAddressBook
      - shippingAddress
      - subPayAmt
      - updateMember
    properties:
      orderSheetNo:
        type: string
        description: 주문서번호
      addressNo:
        type: integer
        format: int32
        example: 1
        description: 주소번호
      shippingAddress:
        description: 배송지 정보
        $ref: '#/definitions/ShippingAddress'
      useDefaultAddress:
        type: boolean
        example: false
        description: 기본 주소지 설정 여부<br>(true 이면 선택한 배송지 정보가 기본주소지로 설정되어 저장된다)
      saveAddressBook:
        type: boolean
        example: false
        description: >-
          주소록에 등록 여부 <br>(true 이면 선택한 배송지 정보가 주소록에 저장된다. <br>이미 저장된 주소록을 선택하여
          주소를 수정했다면, <br>변경한 주소로 수정되어 저장한다)
      orderMemo:
        type: string
        description: 주문메모
      deliveryMemo:
        type: string
        description: 배송메모
      member:
        type: boolean
        example: true
        description: 회원 여부
      orderer:
        example: 홍길동
        description: 주문자정보
        $ref: '#/definitions/OrdererContact'
      updateMember:
        type: boolean
        example: false
        description: 회원 정보 반영 여부
      tempPassword:
        type: string
        description: 임시주문번호(비회원인경우 필수)
      coupons:
        description: 쿠폰정보
        $ref: '#/definitions/ApplyCouponApiRequest'
      subPayAmt:
        type: number
        example: 0
        description: 보조결제 수단 결제액(적립금 사용액)
      orderTitle:
        type: string
        example: 테스트상품 외 2건(default생성)
        description: 주문명
      payType:
        type: string
        example: PAYCO
        description: 결제타입
        enum:
          - CREDIT_CARD
          - EASY_ACCOUNT
          - MOBILE
          - REALTIME_ACCOUNT_TRANSFER
          - VIRTUAL_ACCOUNT
          - GIFT
          - ATM
          - PAYCO
          - ZERO_PAY
          - ACCUMULATION
          - ACCOUNT
          - PHONE_BILL
          - POINT
          - YPAY
          - KPAY
          - PAYPIN
          - INIPAY
          - PAYPAL
          - STRIPE
          - ETC
      pgType:
        type: string
        example: PAYCO
        description: PG타입
        enum:
          - PAYCO
          - PAYPAL
          - STRIPE
          - KCP
          - INICIS
          - NONE
          - KCP_MOBILE
          - KCP_APP
      clientReturnUrl:
        type: string
        example: 'http://alpha-api.e-ncp.com/ncp.html'
        description: PAYCO 결제 완료 후 리턴 될 URL
      clientParams:
        type: object
        example: '{"mallNo" : "1", "orderName" : "주문테스트"}'
        description: 결제완료 API 호출 후 다시 전달 받을 값
      inApp:
        type: boolean
        example: false
        description: 인앱 여부
      extraData:
        type: object
        example: >-
          {'cardNumber':4242424242424242, 'cardExpMonth':12,
          'cardExpYear':'2020', 'cardCvc':'123', 'saveYn':'Y'} or
          {'cardId':'card_12354123124'}
        description: >-
          추가 정보<br>(ex : Stripe결제수단의 경우 카드 정보 or 저장된 카드의 cardId)<br>(ex : payco
          세부 결제 수단 결정. detailTypes에 선언된 방법으로만 결제 가능 <br>{detailPayTypes :
          [<br>"CREDIT_CARD",<br>"EASY_ACCOUNT",<br>"MOBILE",<br>"CREDIT_CARD_NORMAL",<br>"REALTIME_ACCOUNT_TRANSFER",<br>"NO_ACCOUNT"<br>]})
      applyInsurance:
        type: boolean
        example: true
        description: 전자보증보험신청 여부
      insurance:
        description: 전자보증보험신청
        $ref: '#/definitions/InsuranceRequest'
  OrderProductOptionInputRequest:
    type: object
    required:
      - inputName
      - inputValue
    properties:
      inputName:
        type: string
        example: 사이즈
        description: 구매자 작성형 입력 이름
      inputValue:
        type: string
        example: 14호
        description: 구매자 작성형 입력 값
  OrderProductOptionValidInfo:
    type: object
    properties:
      errorCode:
        description: 유효성 실패 사유 코드
        $ref: '#/definitions/ErrorCode'
      message:
        type: string
        description: 유효성 실패 사유 메세지
      validYn:
        type: string
        description: 유효성 여부
  OrderSheetAddress:
    type: object
    properties:
      mainAddress:
        description: 최근 배송지 목록
        $ref: '#/definitions/ShippingAddress'
      recentAddresses:
        type: array
        description: 최근 배송지 목록
        items:
          $ref: '#/definitions/ShippingAddress'
      recentDeliveryMemo:
        type: array
        description: 최근 배송 메시지
        items:
          type: string
  OrderSheetCalculationRequest:
    type: object
    required:
      - subPayAmt
    properties:
      addressRequest:
        description: 배송지 정보
        $ref: '#/definitions/AddressRequest'
      couponRequest:
        description: 적용쿠폰 정보
        $ref: '#/definitions/ApplyCouponApiRequest'
      subPayAmt:
        type: number
        description: '0'
  OrderSheetCouponApplyResponse:
    type: object
    required:
      - availablePayTypes
      - paymentInfo
    properties:
      paymentInfo:
        description: 결제금액정보
        $ref: '#/definitions/PaymentAmount'
      availablePayTypes:
        type: array
        description: 결제정보
        items:
          type: string
          enum:
            - CREDIT_CARD
            - EASY_ACCOUNT
            - MOBILE
            - REALTIME_ACCOUNT_TRANSFER
            - VIRTUAL_ACCOUNT
            - GIFT
            - ATM
            - PAYCO
            - ZERO_PAY
            - ACCUMULATION
            - ACCOUNT
            - PHONE_BILL
            - POINT
            - YPAY
            - KPAY
            - PAYPIN
            - INIPAY
            - PAYPAL
            - STRIPE
            - ETC
  OrderSheetCouponResponse:
    type: object
    properties:
      buyAmt:
        type: number
      deliveryAmt:
        type: number
      deliveryCouponDiscountAmt:
        type: number
      deliveryCoupons:
        type: array
        items:
          $ref: '#/definitions/Coupon'
      orderCouponDiscountAmt:
        type: number
      orderCoupons:
        type: array
        items:
          $ref: '#/definitions/Coupon'
      orderSheetNo:
        type: string
      productCouponDiscountAmt:
        type: number
      products:
        type: array
        items:
          $ref: '#/definitions/ProductSummary'
  OrderSheetKeyResponse:
    type: object
    required:
      - orderSheetNo
    properties:
      orderSheetNo:
        type: string
        description: 임시 주문서 번호
  OrderSheetPromotionSummary:
    type: object
    properties:
      usableCouponCnt:
        type: integer
        format: int32
        description: 사용가능 상품/주문쿠폰 수량
      myCouponCnt:
        type: integer
        format: int32
        description: 보유하고 있는 상품/주문쿠폰 수량
      usableDeliveryCouponCnt:
        type: integer
        format: int32
        description: 사용가능 배송쿠폰 수량
      myDeliveryCouponCnt:
        type: integer
        format: int32
        description: 보유하고 있는 배송쿠폰 수량
      myAccumulationAmt:
        type: integer
        format: int32
        description: 사용가능한 적립금
  OrderSheetRequest:
    type: object
    required:
      - products
    properties:
      products:
        type: array
        description: 리스트 타입의 상품
        items:
          $ref: '#/definitions/CartItemRequest'
      productCoupons:
        type: array
        description: 리스트 타입의 상품쿠폰
        items:
          $ref: '#/definitions/ApplyProductCouponApiParam'
  OrderSheetResponse:
    type: object
    required:
      - deliveryGroups
      - foreignPartners
      - orderSheetAddress
      - orderSheetPromotionSummary
      - ordererContact
      - paymentInfo
      - pgType
    properties:
      allowPayTypes:
        type: array
        items:
          type: string
          enum:
            - CREDIT_CARD
            - EASY_ACCOUNT
            - MOBILE
            - REALTIME_ACCOUNT_TRANSFER
            - VIRTUAL_ACCOUNT
            - GIFT
            - ATM
            - PAYCO
            - ZERO_PAY
            - ACCUMULATION
            - ACCOUNT
            - PHONE_BILL
            - POINT
            - YPAY
            - KPAY
            - PAYPIN
            - INIPAY
            - PAYPAL
            - STRIPE
            - ETC
      pgType:
        type: string
        example: PAYCO
        description: 결제 타입
        enum:
          - PAYCO
          - PAYPAL
          - STRIPE
          - KCP
          - INICIS
          - NONE
          - KCP_MOBILE
          - KCP_APP
      deliveryGroups:
        type: array
        description: 합배송 그룹별 상품 목록
        items:
          $ref: '#/definitions/CartDeliveryGroup'
      orderSheetAddress:
        description: 배송지정보
        $ref: '#/definitions/OrderSheetAddress'
      price:
        description: 금액정보
        $ref: '#/definitions/Price'
      ordererContact:
        description: 주문자정보
        $ref: '#/definitions/OrdererContact'
      orderSheetPromotionSummary:
        description: 보유쿠폰정보
        $ref: '#/definitions/OrderSheetPromotionSummary'
      paymentInfo:
        description: 결제금액정보
        $ref: '#/definitions/PaymentAmount'
      foreignPartners:
        type: array
        description: >-
          외국 파트너(개인정보 국외 이전 동의) - foreignPartners 가 null 이 아닌 경우 개인정보 국외 이전 동의를
          받아야 합니다.
        items:
          $ref: '#/definitions/ForeignPartner'
  OrdererContact:
    type: object
    required:
      - ordererContact1
      - ordererContact2
      - ordererEmail
      - ordererName
    properties:
      ordererName:
        type: string
        example: 홍길동
        description: 주문자명
      ordererContact1:
        type: string
        example: 010-0000-0000
        description: 주문자연락처1
      ordererContact2:
        type: string
        example: 010-0000-0000
        description: 주문자연락처2
      ordererEmail:
        type: string
        example: nhn@nhnent.com
        description: 주문자이메일
  Partner:
    type: object
    properties:
      partnerName:
        type: string
        description: 판매자명
      businessRegistrationNo:
        type: string
        description: 사업자번호
      companyName:
        type: string
        description: 상호명
      onlineMarketingBusinessDeclarationNo:
        type: string
        description: 통신판매신고번호
      ownerName:
        type: string
        description: 대표자명
      officeAddressLabel:
        type: string
        description: 사업장 주소
      phoneNo:
        type: string
        description: 대표번호
      faxNo:
        type: string
        description: FAX번호
      email:
        type: string
        description: 대표 이메일
      partnerNo:
        type: integer
        format: int32
        description: 파트너 번호
  PasswordRequest:
    type: object
    required:
      - password
    properties:
      password:
        type: string
        example: abc$%^987
        description: 비밀번호
  PayConfirmResponse:
    type: object
    required:
      - clientReturnParam
      - orderNo
    properties:
      accountNo:
        type: string
        description: 입금계좌정보
      bank:
        type: string
        description: 입금은행
        enum:
          - KDB
          - IBK
          - KB
          - KEB
          - SUHYUP
          - NH
          - WOORI
          - SC
          - CITY
          - KFCC
          - CU
          - EPOST
          - HANA
          - SHINHAN
          - DAEGU
          - PUSAN
          - GWANGJU
          - JEJU
          - JEONBUK
          - GYEONGNAM
          - SANGHO
          - HSBC
          - DEUTSCHE
          - NFCF
          - KBANK
          - YUANTA
          - HYUNDAI
          - MIRAE
          - DAEWOO
          - SAMSUNG
          - HANKOOK
          - WOORI_INVEST
          - KYOBO
          - HI_INVEST
          - HMC_INVEST
          - KIWOOM
          - ETRADE
          - SK
          - DAISHIN
          - SOLOMON_INVEST
          - HANHWA
          - HANA_INVEST
          - SHINHAN_INVEST
          - DONGBU
          - EUGENE_INVEST
          - MERITZ_COMPREHENSIVE
          - NH_INVEST
          - BOOKOOK
          - SHINYOUNG
          - LIG_INVEST
      bankDepositorName:
        type: string
        description: 예금주
      bankName:
        type: string
      clientReturnParam:
        type: object
        example: '{"evnetType" : "EVT10001", "gradeType" : "vvip"}'
        description: 주문예약 API에서 clientParams로 전달한 파라미터
      extraData:
        type: object
        description: PG사에 전달한 정보
      orderNo:
        type: string
        description: 주문번호
      payType:
        type: string
        description: 결제타입
        enum:
          - CREDIT_CARD
          - EASY_ACCOUNT
          - MOBILE
          - REALTIME_ACCOUNT_TRANSFER
          - VIRTUAL_ACCOUNT
          - GIFT
          - ATM
          - PAYCO
          - ZERO_PAY
          - ACCUMULATION
          - ACCOUNT
          - PHONE_BILL
          - POINT
          - YPAY
          - KPAY
          - PAYPIN
          - INIPAY
          - PAYPAL
          - STRIPE
          - ETC
      paymentExpirationYmdt:
        type: string
        format: date-time
        description: 입금만기일시
      pgOrderNo:
        type: string
        description: PG사 거래번호
      pgType:
        type: string
        description: PG타입
        enum:
          - PAYCO
          - PAYPAL
          - STRIPE
          - KCP
          - INICIS
          - NONE
          - KCP_MOBILE
          - KCP_APP
      remitterName:
        type: string
        description: 송금자명
  PayReservationResponse:
    type: object
    required:
      - extraData
      - key
      - returnUrl
    properties:
      extraData:
        type: object
        description: 각 PG사에서 요구하는 특수 정보
      key:
        type: string
        example: 39XAYgaTMcGjzM8E-H75zO44GAYfEDTk1tw5F2q9Q8uVDkrPWU1s4SwpEeQEwp2tr
        description: PG사에서 전달 받은 예약 승인 키 값
      returnUrl:
        type: string
        example: 'https://alpha-bill.payco.com'
        description: PG사에서 전달 받은 결제 URL
  PaymentAmount:
    type: object
    properties:
      availableAccumulationAmt:
        type: integer
        format: int32
        description: 사용가능한 적립금
      buyAmt:
        type: number
        description: >-
          buyAmt[상품 구매금액] = totalStandardAmt[최종상품금액] -
          totalImmediateDiscountAmt[즉시할인가] - totalAdditionalDiscountAmt[추가할인가] -
          productCouponAmt[상품쿠폰할인금액] - cartCouponAmt[장바구니쿠폰할인금액]
      cartCouponAmt:
        type: number
        description: 장바구니 쿠폰 할인금액
      customsDuty:
        type: number
        description: 'customs Duty [관세] (미국 몰 전용)'
      deliveryAmt:
        type: number
        description: 배송비
      deliveryAmtOnDelivery:
        type: number
        description: 착불 배송비
      deliveryCouponAmt:
        type: number
        description: 배송비 쿠폰 할인금액
      paymentAmt:
        type: number
        description: >-
          paymentAmt[결제예정금액] = buyAmt[상품 구매금액] + deliveryAmt[배송비] +
          remoteDeliveryAmt[지역별추가배송비] + salesTaxAmt - deliveryCouponAmt[배송비 쿠폰
          할인금액] - accumulationAmt[적립금]
      productCouponAmt:
        type: number
        description: 상품쿠폰 할인금액(상품쿠폰 + 플러스쿠폰)
      remoteDeliveryAmt:
        type: number
        description: 지역별추가배송비
      remoteDeliveryAmtOnDelivery:
        type: number
        description: 착불 지역별 추가 배송비
      salesTaxAmt:
        type: number
        description: sales Tax (미국 몰 전용)
      totalAdditionalDiscountAmt:
        type: number
        description: 'additionalDiscountAmt[추가할인가] * orderCnt[구매수량]'
      totalImmediateDiscountAmt:
        type: number
        description: 'immediateDiscountAmt[즉시할인가] * orderCnt[구매수량]'
      totalStandardAmt:
        type: number
        description: >-
          standardPrice[최종상품금액] (salePrice[판매가] + addPrice[옵션추가금액]) *
          orderCnt[구매수량]
      usedAccumulationAmt:
        type: integer
        format: int32
        description: 사용한 적립금
  PaymentConfirmRequest:
    type: object
    required:
      - orderSheetNo
      - payType
    properties:
      extraData:
        type: object
        description: 기타 PG사 넘어갈 정보
      orderSheetNo:
        type: string
        description: 임시주문번호
      payType:
        type: string
        example: PAYCO
        description: 결제 타입
        enum:
          - PAYCO
          - PAYPAL
          - STRIPE
          - KCP
          - INICIS
          - NONE
          - KCP_MOBILE
          - KCP_APP
      paymentCertifyToken:
        type: string
        description: PG사에서 전달한 결제 토큰
  PopupResponse:
    type: object
    properties:
      popupNo:
        type: integer
        format: int32
        description: 팝업번호
      label:
        type: string
        description: 팝업명
      height:
        type: integer
        format: int32
        description: 세로(px)
      width:
        type: integer
        format: int32
        description: 가로(px)
      type:
        type: string
        description: '타입(윈도우, 레이어)'
        enum:
          - WINDOW
          - LAYER
      displayTypes:
        type: array
        description: '노출 범위(PC, 모바일 앱, 모바일 웹)'
        items:
          type: string
          enum:
            - PC
            - MOBILE_APP
            - MOBILE_WEB
      content:
        type: string
        description: 팝업상세(HTML)
      startYmdt:
        type: string
        format: date-time
        description: 전시 시작일
      endYmdt:
        type: string
        format: date-time
        description: 전시 종료일
  Price:
    type: object
    properties:
      salePrice:
        type: number
        description: 상품판매가
      addPrice:
        type: number
        description: 옵션추가금액
      immediateDiscountAmt:
        type: number
        description: 즉시할인금액
      additionalDiscountAmt:
        type: number
        description: 추가할인금액
      standardPrice:
        type: number
        description: 정상가(상품판매가 + 옵션추가금액)
      immediateDiscountedPrice:
        type: number
        description: 즉시할인적용가
      buyPrice:
        type: number
        description: 구매가(즉시할인 + 추가할인 적용)
      standardAmt:
        type: number
        description: 정상금액(상품판매가 + 옵션추가금액) * 주문수량
      immediateDiscountedAmt:
        type: number
        description: 즉시할인적용가 * 주문수량
      buyAmt:
        type: number
        description: 구매금액(구매가 * 주문수량)
  ProductDetailResponse:
    type: object
    required:
      - baseInfo
    properties:
      baseInfo:
        description: 상품 기본 정보
        $ref: '#/definitions/BaseInfo'
      stock:
        description: 재고정보
        $ref: '#/definitions/Stock'
      price:
        description: 가격 정보
        $ref: '#/definitions/ProductPrice'
      deliveryFee:
        description: 배송 정보
        $ref: '#/definitions/DeliveryFee'
      limitations:
        description: 구매제한
        $ref: '#/definitions/Limit'
      counter:
        description: 상품 카운트 정보
        $ref: '#/definitions/Counter'
      categories:
        type: array
        description: 카테고리 목록
        items:
          $ref: '#/definitions/Category'
      brand:
        description: 브랜드 정보
        $ref: '#/definitions/Brand'
      liked:
        type: boolean
        example: false
        description: 좋아요 여부(accessToken필요)
      partner:
        description: 판매자 정보
        $ref: '#/definitions/Partner'
      status:
        description: 상품 상태
        $ref: '#/definitions/Status'
  ProductInquiriesResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/InquiryResponse'
      totalCount:
        type: integer
        format: int32
  ProductInquiryAddRequest:
    type: object
    required:
      - content
      - productNo
      - secreted
      - type
    properties:
      productNo:
        type: integer
        format: int32
        example: 100398947
        description: 상품번호
      title:
        type: string
        example: Title Example
        description: 상품문의 제목(선택)
      content:
        type: string
        example: Content Example
        description: 상품문의 내용(필수)
      secreted:
        type: boolean
        example: true
        description: 비밀글 여부
      type:
        type: string
        example: PRODUCT
        description: >-
          상품문의 유형 (상품:PRODUCT, 배송: DELIVERY, 반품: RETURN, 교환: EXCHANGE, 환불:
          REFUND, 기타: OTHER)
        enum:
          - PRODUCT
          - DELIVERY
          - RETURN
          - EXCHANGE
          - REFUND
          - OTHER
      parentInquiryNo:
        type: integer
        format: int32
        description: 대댓글 경우만 전송(부모 상품문의 번호)
  ProductInquiryEditRequest:
    type: object
    required:
      - content
      - secreted
      - type
    properties:
      title:
        type: string
        example: Title Example
        description: 상품문의 제목(선택)
      content:
        type: string
        example: Content Example
        description: 상품문의 내용(필수)
      secreted:
        type: boolean
        example: true
        description: 비밀글 여부
      type:
        type: string
        example: PRODUCT
        description: >-
          상품문의 유형 (상품:PRODUCT, 배송: DELIVERY, 반품: RETURN, 교환: EXCHANGE, 환불:
          REFUND, 기타: OTHER)
        enum:
          - PRODUCT
          - DELIVERY
          - RETURN
          - EXCHANGE
          - REFUND
          - OTHER
  ProductPrice:
    type: object
    required:
      - salePrice
    properties:
      salePrice:
        type: number
        description: 상품판매가
      immediateDiscountAmt:
        type: number
        description: 즉시할인가
      immediateDiscountUnitType:
        type: string
        description: '즉시할인 타입(원, %)'
        enum:
          - WON
          - RATE
      additionDiscountAmt:
        type: number
        description: 추가상품할인가
      additionDiscountUnitType:
        type: string
        description: '추가상품할인 타입(원, %)'
        enum:
          - WON
          - RATE
      maxAdditionDiscountAmt:
        type: number
        description: 최대 추가할인 금액
      unitName:
        type: string
        description: 단위명
      unitNameType:
        type: string
        description: >-
          단위(개, 대, 마리, 매, 발, 봉, 쌍, 알, 입, 장, 정, 켤레, 포, a, ah, box, cc, cm, ea, g,
          gal, gb, inch, kg, L, lb, m, mah, mb, mg, ml, mm, oz, pack, pc, pg,
          psi, R, T, tb, v, w, 캡슐, Vcap, soft gel, 구미, P, 권)
        enum:
          - NAME1
          - NAME2
          - NAME3
          - NAME4
          - NAME5
          - NAME6
          - NAME7
          - NAME8
          - NAME9
          - NAME10
          - NAME11
          - NAME12
          - NAME13
          - NAME14
          - NAME15
          - NAME16
          - NAME17
          - NAME18
          - NAME19
          - NAME20
          - NAME21
          - NAME22
          - NAME23
          - NAME24
          - NAME25
          - NAME26
          - NAME27
          - NAME28
          - NAME29
          - NAME30
          - NAME31
          - NAME32
          - NAME33
          - NAME34
          - NAME35
          - NAME36
          - NAME37
          - NAME38
          - NAME39
          - NAME40
          - NAME41
          - NAME42
          - NAME43
          - NAME44
          - NAME45
          - NAME46
          - NAME47
          - NAME48
      unitPrice:
        type: number
        description: 단위가격
      maxCouponAmt:
        type: number
        description: '최대 쿠폰가격(default: 0)'
      estimatedPointAmt:
        type: number
        description: 예상 적립금
      pointRate:
        type: number
        description: 적립금(%)
  ProductResponse:
    type: object
    required:
      - imageUrls
      - productName
      - productNo
      - salePrice
      - stockCnt
    properties:
      imageUrls:
        type: array
        description: 상품 이미지URL
        items:
          type: string
      promotionText:
        type: string
        description: 홍보문구
      productName:
        type: string
        description: 상품명
      salePrice:
        type: number
        description: 상품판매가
      immediateDiscountAmt:
        type: number
        description: 즉시할인가
      additionDiscountAmt:
        type: number
        description: 추가상품할인가
      liked:
        type: boolean
        example: false
        description: 좋아요 여부
      likeCount:
        type: integer
        format: int32
        description: 좋아요 카운트
      reviewRating:
        type: number
        format: float
        description: 상품평 평균점수
      deliveryConditionType:
        type: string
        example: >-
          FREE: 무료, CONDITIONAL: 조건부 무료, FIXED_FEE: 유료(고정 배송비),
          QUANTITY_PROPOSITIONAL_FEE: 수량 비례, PRICE_FEE: 금액별 차등, QUANTITY_FEE:
          수량별 차등
        description: 배송비 타입
        enum:
          - FREE
          - CONDITIONAL
          - FIXED_FEE
          - QUANTITY_PROPOSITIONAL_FEE
          - PRICE_FEE
          - QUANTITY_FEE
      saleCnt:
        type: integer
        format: int32
        description: 구매 수량
      stockCnt:
        type: integer
        format: int32
        description: 재고
      mainStockCnt:
        type: integer
        format: int32
        example: 옵션의 추가금이 0인 재고의 합
        description: 대표 옵션 재고
      productNo:
        type: integer
        format: int32
        description: 상품번호
      saleStartYmdt:
        type: string
        format: date-time
        description: 판매시작일시
      saleEndYmdt:
        type: string
        format: date-time
        description: 판매종료일시
      saleStatusType:
        type: string
        description: '판매상태(READY, ONSALE, STOP)'
        enum:
          - READY
          - ONSALE
          - STOP
          - PROHIBITION
          - FINISHED
  ProductSummary:
    type: object
    properties:
      brandName:
        type: string
      buyAmt:
        type: number
      mainOption:
        type: string
      optionCnt:
        type: integer
        format: int32
      productCouponDiscountAmt:
        type: number
      productCoupons:
        type: array
        items:
          $ref: '#/definitions/Coupon'
      productName:
        type: string
      productNo:
        type: integer
        format: int32
      productPlusCoupons:
        type: array
        items:
          $ref: '#/definitions/Coupon'
  ProductsResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/ProductResponse'
      totalCount:
        type: integer
        format: int32
  ProfileResponse:
    type: object
    properties:
      address:
        type: string
        description: 도로명 주소
      birthday:
        type: string
        example: '19820407'
        description: 생년월일
      countryCd:
        type: string
        description: 회원 국적
        enum:
          - AX
          - AD
          - AU
          - AT
          - BH
          - BE
          - BZ
          - BR
          - BN
          - BG
          - CA
          - E2
          - CL
          - CN
          - CO
          - CR
          - CY
          - CZ
          - DK
          - EC
          - EG
          - SV
          - EE
          - FR
          - GF
          - DE
          - GR
          - GL
          - GU
          - GT
          - GG
          - GY
          - HK
          - HU
          - IS
          - ID
          - IE
          - IL
          - IT
          - JP
          - JE
          - JO
          - KR
          - KW
          - LV
          - LB
          - LI
          - LT
          - LU
          - MO
          - P2
          - MY
          - NL
          - NZ
          - G2
          - 'NO'
          - PY
          - PE
          - PL
          - PT
          - RO
          - RU
          - SM
          - SA
          - G3
          - SG
          - SK
          - SI
          - ES
          - CH
          - TW
          - TH
          - TR
          - AE
          - GB
          - US
          - U2
          - UY
          - VD
          - G4
          - YD
      detailAddress:
        type: string
        description: 도로명 주소 상세
      directMailAgreeYmdt:
        type: string
        format: date-time
        example: '2017-01-11 11:11:11'
        description: 광고 우편물(DM) 수신 동의 시각
      directMailAgreed:
        type: boolean
      email:
        type: string
        example: abc1234@abc.com
        description: 이메일 주소
      jibunAddress:
        type: string
        description: 도로명 주소 (지번 주소)
      jibunDetailAddress:
        type: string
        description: 도로명 주소 상세 (지번 주소)
      joinTypeName:
        type: string
        example: PC|MOBILEWEB|MOBILE
        description: 가입 경로
      joinYmdt:
        type: string
        format: date-time
        description: 가입 일시
      lastLoginIp:
        type: string
        description: 마지막 접속 IP
      lastLoginYmdt:
        type: string
        format: date-time
        description: 최근 접속 시간
      loginCount:
        type: integer
        format: int32
        description: 로그인 횟수
      mallName:
        type: string
        description: 쇼핑몰 이름
      memberGradeName:
        type: string
        example: 일반등급
        description: 회원등급이름
      memberId:
        type: string
        example: userid
        description: 회원 아이디
      memberName:
        type: string
        example: 홍길동
        description: 회원 이름
      memberStatus:
        type: string
        description: 회원 상태
        enum:
          - WAITING
          - ACTIVE
          - LOCKED
          - EXPELLED
          - FREEZE
          - PAUSED
      memberType:
        type: string
        description: 회원 구분
        enum:
          - MALL
          - PAYCO
          - OPENID
      mobileNo:
        type: string
        example: 010-1234-5678
        description: 핸드폰 번호
      nickname:
        type: string
        description: 닉네임
      oauthIdNo:
        type: string
        description: Open Id Key
      principalCertificated:
        type: boolean
      pushNotificationAgreeYmdt:
        type: string
        format: date-time
        example: '2017-01-11 11:11:11'
        description: 푸시 알림 동의 시각
      pushNotificationAgreed:
        type: boolean
      sex:
        type: string
        example: F/M
        description: 성별
      smsAgreeYmdt:
        type: string
        format: date-time
        example: '2017-01-11 11:11:11'
        description: 단문메시지서비스(SMS) 동의 시각
      smsAgreed:
        type: boolean
      telephoneNo:
        type: string
        example: 02-1234-5678
        description: 일반 전화 번호
      zipCd:
        type: string
        description: 우편번호
  ReleaseDormancyRequest:
    type: object
    required:
      - authType
    properties:
      authType:
        type: string
        description: 인증 타입
        enum:
          - SMS
          - EMAIL
          - CERT
      certificationNumber:
        type: string
        example: '123456'
        description: '인증번호 (SMS, Email 인증시)'
        pattern: '^[0-9]*$'
      certificationServiceCode:
        type: string
        example: NHNKCP/NICE
        description: 인증업체 코드 (본인인증시)
        enum:
          - NHNKCP
          - NICE
      ci:
        type: string
        example: nhn1e2n3t==
        description: CI (본인인증시)
      email:
        type: string
        description: 이메일
      memberId:
        type: string
        description: 회원 아이디
      memberName:
        type: string
        description: 회원이름
      mobileNo:
        type: string
        description: 휴대폰 번호
  RemainTimeResponse:
    type: object
    required:
      - remainTime
    properties:
      remainTime:
        type: integer
        format: int32
  ResultResponse:
    type: object
    properties:
      result:
        type: string
  ReviewForm:
    type: object
    required:
      - content
      - mallOptionNo
      - mallProductNo
      - orderProductOptionNo
      - rating
      - urlList
    properties:
      content:
        type: string
        example: 아이들이 좋아하네요
        description: 내용
      mallOptionNo:
        type: integer
        format: int32
        example: 628
        description: 옵션 번호
      mallProductNo:
        type: integer
        format: int32
        example: 357
        description: 상품 번호
      orderProductOptionNo:
        type: integer
        format: int64
        description: 주문옵션번호
      rating:
        type: number
        example: 3
        description: 평점
      urlList:
        type: array
        example: //image.toast.com/aaaaahb/css/ncp_logo.png
        description: 첨부파일 url 리스트 (5개까지 가능)
        items:
          type: string
  ReviewKeyResponse:
    type: object
    required:
      - reviewNo
    properties:
      reviewNo:
        type: integer
        format: int32
        description: 상품 리뷰 번호
  ReviewRateResponse:
    type: object
    required:
      - rate
    properties:
      rate:
        type: number
        description: 리뷰 평점
  ReviewReportForm:
    type: object
    required:
      - content
      - reportReasonCd
      - reviewNo
    properties:
      content:
        type: string
        example: 제 창작물을 도용했습니다.
        description: 신고내용
      reportReasonCd:
        type: string
        example: COPYRIGHT
        description: 신고사유 (COPYRIGHT / SLANDER)
        enum:
          - COPYRIGHT
          - SLANDER
      reviewNo:
        type: integer
        format: int32
        description: 상품평 번호
  ReviewResponse:
    type: object
    required:
      - content
      - immediateDiscountPrice
      - memberId
      - memberName
      - optionName
      - optionNo
      - orderCnt
      - orderNo
      - orderProductOptionNo
      - orderYmdt
      - productMainImageUrl
      - productName
      - productNo
      - rating
      - registerYmdt
      - reviewNo
      - urlList
    properties:
      content:
        type: string
        example: 아이들이 좋아하네요
        description: 내용
      immediateDiscountPrice:
        type: number
        description: 옵션 주문가격 (정상가 + 옵션추가금액 - 즉시할인가)
      memberId:
        type: string
        description: 멤버 아이디
      memberName:
        type: string
        description: |-
          멤버 이름
          (상품평 저장 당시 이름이 저장됩니다)
      optionName:
        type: string
        description: 옵션명
      optionNo:
        type: integer
        format: int32
        example: 357
        description: 옵션 번호
      orderCnt:
        type: integer
        format: int32
        description: 주문수량
      orderNo:
        type: string
        description: 주문번호
      orderProductOptionNo:
        type: integer
        format: int64
        description: 주문옵션번호
      orderYmdt:
        type: string
        format: date-time
        description: 주문일시
      productMainImageUrl:
        type: string
        description: 상품 대표 이미지 url
      productName:
        type: string
        description: 상품명
      productNo:
        type: integer
        format: int32
        example: 357
        description: 상품 번호
      rating:
        type: number
        example: 3
        description: 평점
      registerYmdt:
        type: string
        format: date-time
        description: 등록일
      reviewNo:
        type: integer
        format: int32
        description: 상품평번호
      urlList:
        type: array
        example: //image.toast.com/aaaaahb/css/ncp_logo.png
        description: 첨부파일 url 리스트 (5개까지 가능)
        items:
          type: string
  ReviewableProductsResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/UserOrderProductOption'
      totalCount:
        type: integer
        format: int32
  ReviewsResponse:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/ReviewResponse'
      totalCount:
        type: integer
        format: int64
  Section:
    type: object
    properties:
      label:
        type: string
        description: 섹션 명
      imageUrl:
        type: string
        description: 이미지 URL
      pcPerRow:
        type: integer
        format: int32
        description: '한 행에 디스플레이 되는 이미지 개수(PC), 프론트 정책에 따라 사용하지 않아도 됨'
      mobilePerRow:
        type: integer
        format: int32
        description: '한 행에 디스플레이 되는 이미지 개수(MOBILE), 프론트 정책에 따라 사용하지 않아도 됨'
      products:
        type: array
        description: 상품 목록
        items:
          $ref: '#/definitions/ProductResponse'
  SectionResponse:
    type: object
    properties:
      sectionNo:
        type: integer
        format: int32
        description: 섹션번호
      label:
        type: string
        description: 섹션명
      products:
        type: array
        description: 상품목록
        items:
          $ref: '#/definitions/ProductResponse'
  ShippingAddress:
    type: object
    required:
      - countryCd
      - receiverAddress
      - receiverContact1
      - receiverDetailAddress
      - receiverJibunAddress
      - receiverName
      - receiverZipCd
    properties:
      receiverName:
        type: string
        example: 홍길동
        description: 수령자 명
      addressName:
        type: integer
        format: int32
        example: 홍길동집
        description: 주소록명
      receiverContact1:
        type: string
        example: 010-0000-0000
        description: 연락처1
      receiverContact2:
        type: string
        example: 010-0000-0000
        description: 연락처2
      receiverZipCd:
        type: string
        example: '13487'
        description: 배송지 우편 번호
      receiverAddress:
        type: string
        example: 경기도 성남시 분당구 대왕판교로645번길 12
        description: 배송지 주소
      receiverJibunAddress:
        type: string
        example: 경기도 성남시 분당구 삼평동 629번지 NHN 플레이뮤지엄
        description: 배송지 지번
      receiverDetailAddress:
        type: string
        example: 16 NHN 플레이뮤지엄
        description: 배송지 상세 주소
      customsIdNumber:
        type: string
        example: P12341234
        description: 개인고유통관부호
      countryCd:
        type: string
        example: KR
        description: 국가코드
        enum:
          - AX
          - AD
          - AU
          - AT
          - BH
          - BE
          - BZ
          - BR
          - BN
          - BG
          - CA
          - E2
          - CL
          - CN
          - CO
          - CR
          - CY
          - CZ
          - DK
          - EC
          - EG
          - SV
          - EE
          - FR
          - GF
          - DE
          - GR
          - GL
          - GU
          - GT
          - GG
          - GY
          - HK
          - HU
          - IS
          - ID
          - IE
          - IL
          - IT
          - JP
          - JE
          - JO
          - KR
          - KW
          - LV
          - LB
          - LI
          - LT
          - LU
          - MO
          - P2
          - MY
          - NL
          - NZ
          - G2
          - 'NO'
          - PY
          - PE
          - PL
          - PT
          - RO
          - RU
          - SM
          - SA
          - G3
          - SG
          - SK
          - SI
          - ES
          - CH
          - TW
          - TH
          - TR
          - AE
          - GB
          - US
          - U2
          - UY
          - VD
          - G4
          - YD
  ShippingAddressResponse:
    type: object
    properties:
      bookedAddresses:
        type: array
        items:
          $ref: '#/definitions/Address'
      defaultAddress:
        $ref: '#/definitions/Address'
      recentAddresses:
        type: array
        items:
          $ref: '#/definitions/Address'
  SmsCertificationExtendRequest:
    type: object
    required:
      - mobileNo
      - seconds
      - usage
    properties:
      memberName:
        type: string
        example: example100 or example001@email.com
        description: 회원 이름
      mobileNo:
        type: string
        example: 01012345678
        description: 휴대폰번호
      seconds:
        type: integer
        format: int32
        description: 유효 시간 재설정 - 시간(초)
      usage:
        type: string
        description: 사용 용도
        enum:
          - FIND_ID
          - FIND_PASSWORD
          - CHANGE_MOBILE_NO
          - RELEASE_DORMANT
          - ADMIN
          - JOIN
  SmsCertificationPostRequest:
    type: object
    required:
      - mobileNo
      - usage
    properties:
      memberName:
        type: string
        example: example100 or example001@email.com
        description: 회원 이름
      mobileNo:
        type: string
        example: 01012345678
        description: 휴대폰번호
      usage:
        type: string
        description: 사용 용도
        enum:
          - FIND_ID
          - FIND_PASSWORD
          - CHANGE_MOBILE_NO
          - RELEASE_DORMANT
          - ADMIN
          - JOIN
  Status:
    type: object
    properties:
      saleStatusType:
        type: string
        description: '판매상태(판매전, 판매중, 판매종료, 판매금지, 판매종료)'
        enum:
          - READY
          - ONSALE
          - STOP
          - PROHIBITION
          - FINISHED
      soldout:
        type: boolean
        example: false
        description: 품절여부(대표 수량 0으로 판단)
      display:
        type: boolean
        example: false
        description: 전시여부
  Stock:
    type: object
    required:
      - stockCnt
    properties:
      saleCnt:
        type: integer
        format: int32
        description: 구매 수량
      stockCnt:
        type: integer
        format: int32
        description: 남은 수량
      mainStockCnt:
        type: integer
        format: int32
        description: 대표 남은 수량(옵션의 추가금이 0인 재고의 합)
  StripeCard:
    type: object
    properties:
      brand:
        type: string
        description: >-
          Card brand. Can be Visa, American Express, MasterCard, Discover, JCB,
          Diners Club, or Unknown.
      cardId:
        type: string
        description: card id
      expMonth:
        type: integer
        format: int32
        description: Two digit number representing the card’s expiration month
      expYear:
        type: integer
        format: int32
        description: Four digit number representing the card’s expiration year
      last4:
        type: string
        description: The last 4 digits of the card.
    description: stripe card info
  Top:
    type: object
    properties:
      pc:
        description: 상단이미지 정보(PC)
        $ref: '#/definitions/ImageInfo'
      mobile:
        description: 상단이미지 정보(MOBILE)
        $ref: '#/definitions/ImageInfo'
  UserOrder:
    type: object
    properties:
      firstOrderAmt:
        description: 최초주문금액정보
        $ref: '#/definitions/OrderAmount'
      lastOrderAmt:
        description: 최종주문금액정보
        $ref: '#/definitions/OrderAmount'
      orderOptions:
        type: array
        description: 주문상품옵션리스트
        items:
          $ref: '#/definitions/UserOrderProductOption'
      orderYmdt:
        type: string
        format: date-time
        description: 주문일자
      orderNo:
        type: string
        description: 주문번호
      payType:
        type: string
        description: 결제수단
        enum:
          - CREDIT_CARD
          - EASY_ACCOUNT
          - MOBILE
          - REALTIME_ACCOUNT_TRANSFER
          - VIRTUAL_ACCOUNT
          - GIFT
          - ATM
          - PAYCO
          - ZERO_PAY
          - ACCUMULATION
          - ACCOUNT
          - PHONE_BILL
          - POINT
          - YPAY
          - KPAY
          - PAYPIN
          - INIPAY
          - PAYPAL
          - STRIPE
          - ETC
      pgOrderNo:
        type: string
        description: PG사 주문번호 - 매출전표등 확인용
    description: 유저 주문
  UserOrderDeliveryGroup:
    type: object
    properties:
      deliveryAmt:
        type: number
        description: 배송비
      deliveryCompanyType:
        type: string
        description: 택배사타입
        enum:
          - CJ
          - POST
          - HANJIN
          - GTX
          - HYUNDAI
          - KGB
          - LOGEN
          - CJHBL
          - GSI
          - KGL
          - INTRAS
          - UPS
      deliveryCompanyTypeLabel:
        type: string
        description: 택배사명
      deliveryNo:
        type: integer
        format: int64
        description: 배송번호
      deliveryType:
        type: string
        description: 배송구분
        enum:
          - PARCEL_DELIVERY
          - DIRECT_DELIVERY
      frontDisplayText:
        type: string
        description: 배송조건노출문구(for US)
      invoiceNo:
        type: string
        description: 송장번호
      orderOptions:
        type: array
        description: 주문상품옵션리스트
        items:
          $ref: '#/definitions/UserOrderProductOption'
      remoteDeliveryAmt:
        type: number
        description: 지역별 추가 배송비
      retrieveInvoiceUrl:
        type: string
        description: 송장추적 URL
      returnDeliveryAmt:
        type: number
        description: 반품 배송비
      shippingMethodType:
        type: string
        description: 배송서비스타입(for US)
        enum:
          - SUREPOST
          - DAY2_AIR
          - NEXT_DAY_AIR
          - STANDARD
          - EXPRESS_SAVER
          - WORLDWIRD_EXPEDITED
          - STANDARD_SINGLE
  UserOrderDetail:
    type: object
    properties:
      billingAddress:
        example: "{\"receiverName\":\"NCP\",\"countryCd\":\"US\",\"receiverZipCd\":\"94105\",\"receiverAddress\":\"CA||San\_Francisco\",\"receiverDetailAddress\":\"140\_2nd\_Street\",\"receiverJibunAddress\":\"경기도\_성남시\_분당구\_삼평동\_629\",\"receiverContact1\":\"010-7770-7777\",\"receiverContact2\":\"031-8038-0000\",\"deliveryMemo\":\"부재시\_경비실에\_맞겨주세요.\",\"customsIdNumber\":\"P123412341234\",\"defaultYn\":\"N\"}"
        description: 빌링주소 JSON
        $ref: '#/definitions/ShippingAddress'
      deliveryMemo:
        type: string
        description: 베송메모
      firstOrderAmount:
        description: 최초주문금액정보
        $ref: '#/definitions/OrderAmount'
      insurance:
        description: 보증보험
        $ref: '#/definitions/Insurance'
      lastOrderAmount:
        description: 최종주문금액정보
        $ref: '#/definitions/OrderAmount'
      nextActions:
        type: array
        description: 다음에 할 수 있는 작업
        items:
          $ref: '#/definitions/NextAction'
      orderMemo:
        type: string
        description: 주문메모
      orderNo:
        type: string
        description: 주문번호
      orderOptionsGroupByPartner:
        type: array
        description: 파트너별주문리스트
        items:
          $ref: '#/definitions/UserOrderPartnerGroup'
      orderYmdt:
        type: string
        format: date-time
        description: 주문일자
      orderer:
        description: 주문자정보
        $ref: '#/definitions/OrdererContact'
      payType:
        type: string
        description: 결제수단
        enum:
          - CREDIT_CARD
          - EASY_ACCOUNT
          - MOBILE
          - REALTIME_ACCOUNT_TRANSFER
          - VIRTUAL_ACCOUNT
          - GIFT
          - ATM
          - PAYCO
          - ZERO_PAY
          - ACCUMULATION
          - ACCOUNT
          - PHONE_BILL
          - POINT
          - YPAY
          - KPAY
          - PAYPIN
          - INIPAY
          - PAYPAL
          - STRIPE
          - ETC
      pgOrderNo:
        type: string
        description: PG사 결제번호(주문번호) - 매출전표등 확인용
      shippingAddress:
        description: 배송지정보
        $ref: '#/definitions/ShippingAddress'
      payTypeLabel:
        type: string
        description: 결제수단라벨
    description: 주문 상세
  UserOrderPartnerGroup:
    type: object
    properties:
      partnerNo:
        type: integer
        format: int32
        description: 파트너번호
      partnerName:
        type: string
        description: 파트너명
      orderOptionsGroupByDelivery:
        type: array
        description: 배송그룹별 옵션
        items:
          $ref: '#/definitions/UserOrderDeliveryGroup'
    description: 유저 주문 - 파트너 그룹
  UserOrderProductOption:
    type: object
    properties:
      delivery:
        description: 배송정보
        $ref: '#/definitions/DeliveryInfo'
      nextActions:
        type: array
        description: 다음에 할 수 있는 작업
        items:
          $ref: '#/definitions/NextAction'
      price:
        description: 금액정보
        $ref: '#/definitions/Price'
      refundable:
        type: boolean
      orderOptionNo:
        type: integer
        format: int64
        description: 주문상품옵션번호
      additionalProductNo:
        type: integer
        format: int32
        description: 추가상품번호
      optionNo:
        type: integer
        format: int32
        description: 옵션번호
      productNo:
        type: integer
        format: int32
        description: 상품번호
      orderOptionType:
        type: string
        description: 주문옵션타입(일반옵션 / 추가상품
        enum:
          - NORMAL_OPTION
          - ADDITIONAL_OPTION
      imageUrl:
        type: string
        description: 상품 이미지 URL
      brandName:
        type: string
        description: 브랜드명
      productName:
        type: string
        description: 상품명
      productNameEn:
        type: string
        description: 영어상품명
      optionName:
        type: string
        description: 옵션명
      optionValue:
        type: string
        description: 옵션값
      orderCnt:
        type: integer
        format: int32
        description: 주문수량
      orderStatusType:
        type: string
        description: 주문상태
        enum:
          - DEPOSIT_WAIT
          - PAY_DONE
          - PRODUCT_PREPARE
          - DELIVERY_PREPARE
          - DELIVERY_ING
          - DELIVERY_DONE
          - BUY_CONFIRM
          - CANCEL_DONE
          - RETURN_DONE
          - EXCHANGE_DONE
          - PAY_WAIT
          - PAY_CANCEL
          - PAY_FAIL
          - DELETE
          - EXCHANGE_WAIT
      claimStatusType:
        type: string
        description: 클레임상태
        enum:
          - CANCEL_NO_REFUND
          - CANCEL_REQUEST
          - CANCEL_PROC_REQUEST_REFUND
          - CANCEL_PROC_WAITING_REFUND
          - CANCEL_DONE
          - RETURN_REQUEST
          - RETURN_REJECT_REQUEST
          - RETURN_PROC_BEFORE_RECEIVE
          - RETURN_PROC_REQUEST_REFUND
          - RETURN_PROC_WAITING_REFUND
          - RETURN_DONE
          - EXCHANGE_REQUEST
          - EXCHANGE_REJECT_REQUEST
          - EXCHANGE_PROC_BEFORE_RECEIVE
          - EXCHANGE_PROC_REQUEST_PAY
          - EXCHANGE_PROC_PAY_DONE
          - EXCHANGE_PROC_REQUEST_REFUND
          - EXCHANGE_PROC_WAITING_REFUND
          - EXCHANGE_DONE_REFUND_DONE
          - EXCHANGE_DONE
      optionType:
        type: string
        description: 옵션형태
        enum:
          - PRODUCT_ONLY
          - NORMAL_OPTION
          - ADDITIONAL_PRODUCT
    description: 유저 주문상품옵션
  UsernamePasswordRequest:
    type: object
    required:
      - captcha
      - memberId
      - password
    properties:
      captcha:
        type: string
        description: 자동입력 방지 문자
      memberId:
        type: string
        description: 회원 아이디
        pattern: '^[a-zA-Z0-9@\._\-]{1,40}$'
      password:
        type: string
        description: 비밀번호
        pattern: '^[a-zA-Z0-9!@#$%^&+=\-_\.\(\)\\]{8,20}$'
